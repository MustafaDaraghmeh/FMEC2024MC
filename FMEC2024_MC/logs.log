2024-07-28 16:40:00,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-28 16:40:00,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-28 16:40:00,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-28 16:40:00,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-28 16:40:02,145:INFO:PyCaret ClassificationExperiment
2024-07-28 16:40:02,145:INFO:Logging name: Multi-class - Drone Type
2024-07-28 16:40:02,145:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-28 16:40:02,145:INFO:version 3.3.2
2024-07-28 16:40:02,145:INFO:Initializing setup()
2024-07-28 16:40:02,145:INFO:self.USI: 7854
2024-07-28 16:40:02,145:INFO:self._variable_keys: {'gpu_param', 'logging_param', 'fold_generator', 'html_param', 'fold_groups_param', 'target_param', 'exp_name_log', 'pipeline', 'X_train', 'X_test', 'data', '_ml_usecase', 'fold_shuffle_param', 'y_test', 'fix_imbalance', 'seed', 'y', 'memory', 'log_plots_param', 'gpu_n_jobs_param', 'exp_id', 'n_jobs_param', 'USI', 'X', 'is_multiclass', '_available_plots', 'idx', 'y_train'}
2024-07-28 16:40:02,145:INFO:Checking environment
2024-07-28 16:40:02,145:INFO:python_version: 3.10.13
2024-07-28 16:40:02,145:INFO:python_build: ('main', 'Sep 11 2023 13:44:35')
2024-07-28 16:40:02,145:INFO:machine: x86_64
2024-07-28 16:40:02,148:INFO:platform: Linux-3.10.0-1160.118.1.el7.x86_64-x86_64-with-glibc2.17
2024-07-28 16:40:02,148:INFO:Memory: svmem(total=540530688000, available=532330643456, percent=1.5, used=6745411584, free=319533940736, active=19336704000, inactive=193908858880, buffers=652304384, cached=213599031296, shared=17731584, slab=1789071360)
2024-07-28 16:40:02,150:INFO:Physical Core: 32
2024-07-28 16:40:02,150:INFO:Logical Core: 32
2024-07-28 16:40:02,150:INFO:Checking libraries
2024-07-28 16:40:02,150:INFO:System:
2024-07-28 16:40:02,150:INFO:    python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
2024-07-28 16:40:02,150:INFO:executable: /speed-scratch/m_daragh/venv/py31013_pc332/bin/python
2024-07-28 16:40:02,150:INFO:   machine: Linux-3.10.0-1160.118.1.el7.x86_64-x86_64-with-glibc2.17
2024-07-28 16:40:02,150:INFO:PyCaret required dependencies:
2024-07-28 16:40:03,135:INFO:                 pip: 23.3.1
2024-07-28 16:40:03,135:INFO:          setuptools: 68.2.2
2024-07-28 16:40:03,135:INFO:             pycaret: 3.3.2
2024-07-28 16:40:03,135:INFO:             IPython: 8.24.0
2024-07-28 16:40:03,135:INFO:          ipywidgets: 8.1.2
2024-07-28 16:40:03,135:INFO:                tqdm: 4.66.2
2024-07-28 16:40:03,135:INFO:               numpy: 1.26.4
2024-07-28 16:40:03,135:INFO:              pandas: 2.1.4
2024-07-28 16:40:03,135:INFO:              jinja2: 3.1.3
2024-07-28 16:40:03,135:INFO:               scipy: 1.11.4
2024-07-28 16:40:03,135:INFO:              joblib: 1.3.2
2024-07-28 16:40:03,135:INFO:             sklearn: 1.4.2
2024-07-28 16:40:03,135:INFO:                pyod: 1.1.3
2024-07-28 16:40:03,135:INFO:            imblearn: 0.12.2
2024-07-28 16:40:03,135:INFO:   category_encoders: 2.6.3
2024-07-28 16:40:03,135:INFO:            lightgbm: 4.3.0
2024-07-28 16:40:03,135:INFO:               numba: 0.59.1
2024-07-28 16:40:03,135:INFO:            requests: 2.31.0
2024-07-28 16:40:03,135:INFO:          matplotlib: 3.7.5
2024-07-28 16:40:03,135:INFO:          scikitplot: 0.3.7
2024-07-28 16:40:03,135:INFO:         yellowbrick: 1.5
2024-07-28 16:40:03,135:INFO:              plotly: 5.22.0
2024-07-28 16:40:03,136:INFO:    plotly-resampler: Not installed
2024-07-28 16:40:03,136:INFO:             kaleido: 0.2.1
2024-07-28 16:40:03,136:INFO:           schemdraw: 0.15
2024-07-28 16:40:03,136:INFO:         statsmodels: 0.14.2
2024-07-28 16:40:03,136:INFO:              sktime: 0.26.0
2024-07-28 16:40:03,136:INFO:               tbats: 1.1.3
2024-07-28 16:40:03,136:INFO:            pmdarima: 2.0.4
2024-07-28 16:40:03,136:INFO:              psutil: 5.9.8
2024-07-28 16:40:03,136:INFO:          markupsafe: 2.1.3
2024-07-28 16:40:03,136:INFO:             pickle5: Not installed
2024-07-28 16:40:03,136:INFO:         cloudpickle: 3.0.0
2024-07-28 16:40:03,136:INFO:         deprecation: 2.1.0
2024-07-28 16:40:03,136:INFO:              xxhash: 3.4.1
2024-07-28 16:40:03,136:INFO:           wurlitzer: 3.1.0
2024-07-28 16:40:03,136:INFO:PyCaret optional dependencies:
2024-07-28 16:40:04,047:INFO:                shap: 0.44.1
2024-07-28 16:40:04,047:INFO:           interpret: 0.6.1
2024-07-28 16:40:04,047:INFO:                umap: 0.5.6
2024-07-28 16:40:04,047:INFO:     ydata_profiling: 4.7.0
2024-07-28 16:40:04,047:INFO:  explainerdashboard: 0.4.7
2024-07-28 16:40:04,047:INFO:             autoviz: Not installed
2024-07-28 16:40:04,047:INFO:           fairlearn: 0.7.0
2024-07-28 16:40:04,047:INFO:          deepchecks: Not installed
2024-07-28 16:40:04,047:INFO:             xgboost: 2.0.3
2024-07-28 16:40:04,047:INFO:            catboost: 1.2.5
2024-07-28 16:40:04,047:INFO:              kmodes: 0.12.2
2024-07-28 16:40:04,047:INFO:             mlxtend: 0.23.1
2024-07-28 16:40:04,047:INFO:       statsforecast: 1.5.0
2024-07-28 16:40:04,047:INFO:        tune_sklearn: 0.5.0
2024-07-28 16:40:04,047:INFO:                 ray: 2.12.0
2024-07-28 16:40:04,047:INFO:            hyperopt: 0.2.7
2024-07-28 16:40:04,047:INFO:              optuna: 3.6.1
2024-07-28 16:40:04,047:INFO:               skopt: 0.10.1
2024-07-28 16:40:04,047:INFO:              mlflow: 2.12.1
2024-07-28 16:40:04,047:INFO:              gradio: Not installed
2024-07-28 16:40:04,047:INFO:             fastapi: 0.110.3
2024-07-28 16:40:04,047:INFO:             uvicorn: 0.29.0
2024-07-28 16:40:04,047:INFO:              m2cgen: 0.10.0
2024-07-28 16:40:04,047:INFO:           evidently: 0.4.19
2024-07-28 16:40:04,047:INFO:               fugue: 0.8.7
2024-07-28 16:40:04,047:INFO:           streamlit: Not installed
2024-07-28 16:40:04,047:INFO:             prophet: Not installed
2024-07-28 16:40:04,047:INFO:None
2024-07-28 16:40:04,047:INFO:Set up data.
2024-07-28 16:40:04,135:INFO:Set up folding strategy.
2024-07-28 16:40:04,136:INFO:Set up train/test split.
2024-07-28 16:40:04,213:INFO:Set up index.
2024-07-28 16:40:04,224:INFO:Assigning column types.
2024-07-28 16:40:04,248:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-28 16:40:04,284:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-28 16:40:04,287:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-28 16:40:04,317:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-28 16:40:04,319:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-28 16:40:04,378:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-28 16:40:04,379:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-28 16:40:04,401:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-28 16:40:04,403:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-28 16:40:04,404:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-28 16:40:04,439:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-28 16:40:04,460:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-28 16:40:04,462:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-28 16:40:04,498:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-28 16:40:04,518:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-28 16:40:04,520:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-28 16:40:04,521:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-28 16:40:04,576:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-28 16:40:04,578:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-28 16:40:04,632:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-28 16:40:04,634:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-28 16:40:04,641:INFO:Preparing preprocessing pipeline...
2024-07-28 16:40:04,646:INFO:Set up label encoding.
2024-07-28 16:40:04,646:INFO:Set up simple imputation.
2024-07-28 16:40:04,646:INFO:Set up variance threshold.
2024-07-28 16:40:04,646:INFO:Set up column transformation.
2024-07-28 16:40:04,646:INFO:Set up feature normalization.
2024-07-28 16:40:05,338:INFO:Finished creating preprocessing pipeline.
2024-07-28 16:40:05,344:INFO:Pipeline: Pipeline(memory=FastMemory(location=./tmp_M-DT/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['IQ_RE_Mean', 'IQ_RE_Min',
                                             'IQ_RE_Max', 'IQ_RE_Median',
                                             'IQ_RE_StdDev', 'IQ_RE_Skewness',
                                             'IQ_RE_Kurtosis',
                                             'IQ_RE_PeakCount', 'IQ_...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0.1))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-07-28 16:40:05,344:INFO:Creating final display dataframe.
2024-07-28 16:40:05,846:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               1000
1                        Target                                              Class
2                   Target type                                         Multiclass
3                Target mapping  DJI: 0, FutabaT14: 1, FutabaT7: 2, Graupner: 3...
4           Original data shape                                        (46153, 75)
5        Transformed data shape                                        (46153, 43)
6   Transformed train set shape                                        (32307, 43)
7    Transformed test set shape                                        (13846, 43)
8              Numeric features                                                 74
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13       Low variance threshold                                                0.1
14               Transformation                                               True
15        Transformation method                                        yeo-johnson
16                    Normalize                                               True
17             Normalize method                                             zscore
18               Fold Generator                                    StratifiedKFold
19                  Fold Number                                                  5
20                     CPU Jobs                                                 -1
21                      Use GPU                                              False
22               Log Experiment                                              False
23              Experiment Name                           Multi-class - Drone Type
24                          USI                                               7854
2024-07-28 16:40:05,912:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-28 16:40:05,914:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-28 16:40:05,974:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-28 16:40:05,976:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-28 16:40:05,978:INFO:setup() successfully completed in 3.84s...............
2024-07-28 16:40:05,978:INFO:Initializing get_config()
2024-07-28 16:40:05,978:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, variable=is_multiclass)
2024-07-28 16:40:05,986:INFO:Variable: i returned as True
2024-07-28 16:40:05,986:INFO:get_config() successfully completed......................................
2024-07-28 16:40:06,112:INFO:Initializing compare_models()
2024-07-28 16:40:06,112:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, include=['xgboost', 'gbc', 'lightgbm', 'catboost', 'et', 'rf', 'lr', 'lda', 'qda', 'dt', 'knn', 'ada', 'nb', 'ridge', 'svm'], fold=None, round=4, cross_validation=True, sort=f1, n_select=15, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, 'include': ['xgboost', 'gbc', 'lightgbm', 'catboost', 'et', 'rf', 'lr', 'lda', 'qda', 'dt', 'knn', 'ada', 'nb', 'ridge', 'svm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 15, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-28 16:40:06,112:INFO:Checking exceptions
2024-07-28 16:40:06,123:INFO:Preparing display monitor
2024-07-28 16:40:06,126:INFO:Initializing Extreme Gradient Boosting
2024-07-28 16:40:06,126:INFO:Total runtime is 1.8397967020670573e-06 minutes
2024-07-28 16:40:06,126:INFO:SubProcess create_model() called ==================================
2024-07-28 16:40:06,127:INFO:Initializing create_model()
2024-07-28 16:40:06,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:40:06,127:INFO:Checking exceptions
2024-07-28 16:40:06,127:INFO:Importing libraries
2024-07-28 16:40:06,127:INFO:Copying training dataset
2024-07-28 16:40:06,154:INFO:Defining folds
2024-07-28 16:40:06,154:INFO:Declaring metric variables
2024-07-28 16:40:06,155:INFO:Importing untrained model
2024-07-28 16:40:06,155:INFO:Extreme Gradient Boosting Imported successfully
2024-07-28 16:40:06,156:INFO:Starting cross validation
2024-07-28 16:40:06,157:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:40:17,085:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,119:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,148:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,153:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,162:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,167:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,182:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,195:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,200:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,216:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,227:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,231:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,294:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,326:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,358:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:40:17,483:INFO:Calculating mean and std
2024-07-28 16:40:17,483:INFO:Creating metrics dataframe
2024-07-28 16:40:17,486:INFO:Uploading results into container
2024-07-28 16:40:17,487:INFO:Uploading model into container now
2024-07-28 16:40:17,487:INFO:_master_model_container: 1
2024-07-28 16:40:17,487:INFO:_display_container: 2
2024-07-28 16:40:17,488:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-28 16:40:17,488:INFO:create_model() successfully completed......................................
2024-07-28 16:40:17,636:INFO:SubProcess create_model() end ==================================
2024-07-28 16:40:17,636:INFO:Creating metrics dataframe
2024-07-28 16:40:17,638:INFO:Initializing Gradient Boosting Classifier
2024-07-28 16:40:17,638:INFO:Total runtime is 0.19186681111653647 minutes
2024-07-28 16:40:17,638:INFO:SubProcess create_model() called ==================================
2024-07-28 16:40:17,638:INFO:Initializing create_model()
2024-07-28 16:40:17,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:40:17,638:INFO:Checking exceptions
2024-07-28 16:40:17,638:INFO:Importing libraries
2024-07-28 16:40:17,638:INFO:Copying training dataset
2024-07-28 16:40:17,673:INFO:Defining folds
2024-07-28 16:40:17,674:INFO:Declaring metric variables
2024-07-28 16:40:17,674:INFO:Importing untrained model
2024-07-28 16:40:17,674:INFO:Gradient Boosting Classifier Imported successfully
2024-07-28 16:40:17,674:INFO:Starting cross validation
2024-07-28 16:40:17,676:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:44:01,027:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:44:01,042:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:01,074:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:01,107:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:02,015:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:44:02,029:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:02,061:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:02,094:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:02,599:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:44:02,613:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:02,646:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:02,679:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:02,865:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:44:02,880:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:02,912:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:02,943:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:02,987:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:44:03,002:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:03,035:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:03,068:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:03,194:INFO:Calculating mean and std
2024-07-28 16:44:03,195:INFO:Creating metrics dataframe
2024-07-28 16:44:03,199:INFO:Uploading results into container
2024-07-28 16:44:03,199:INFO:Uploading model into container now
2024-07-28 16:44:03,200:INFO:_master_model_container: 2
2024-07-28 16:44:03,200:INFO:_display_container: 2
2024-07-28 16:44:03,201:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1000, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-28 16:44:03,201:INFO:create_model() successfully completed......................................
2024-07-28 16:44:03,360:INFO:SubProcess create_model() end ==================================
2024-07-28 16:44:03,360:INFO:Creating metrics dataframe
2024-07-28 16:44:03,363:INFO:Initializing Light Gradient Boosting Machine
2024-07-28 16:44:03,363:INFO:Total runtime is 3.953944687048594 minutes
2024-07-28 16:44:03,363:INFO:SubProcess create_model() called ==================================
2024-07-28 16:44:03,363:INFO:Initializing create_model()
2024-07-28 16:44:03,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:44:03,363:INFO:Checking exceptions
2024-07-28 16:44:03,363:INFO:Importing libraries
2024-07-28 16:44:03,363:INFO:Copying training dataset
2024-07-28 16:44:03,420:INFO:Defining folds
2024-07-28 16:44:03,421:INFO:Declaring metric variables
2024-07-28 16:44:03,421:INFO:Importing untrained model
2024-07-28 16:44:03,421:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-28 16:44:03,421:INFO:Starting cross validation
2024-07-28 16:44:03,422:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:44:47,964:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:48,163:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:48,366:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:49,959:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:50,089:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:50,101:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:50,148:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:50,188:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:50,212:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:51,808:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:51,856:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:51,894:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:53,087:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:53,129:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:53,170:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:44:53,298:INFO:Calculating mean and std
2024-07-28 16:44:53,299:INFO:Creating metrics dataframe
2024-07-28 16:44:53,300:INFO:Uploading results into container
2024-07-28 16:44:53,301:INFO:Uploading model into container now
2024-07-28 16:44:53,301:INFO:_master_model_container: 3
2024-07-28 16:44:53,301:INFO:_display_container: 2
2024-07-28 16:44:53,302:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1000, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-28 16:44:53,302:INFO:create_model() successfully completed......................................
2024-07-28 16:44:53,406:INFO:SubProcess create_model() end ==================================
2024-07-28 16:44:53,406:INFO:Creating metrics dataframe
2024-07-28 16:44:53,409:INFO:Initializing CatBoost Classifier
2024-07-28 16:44:53,409:INFO:Total runtime is 4.7880530436833695 minutes
2024-07-28 16:44:53,409:INFO:SubProcess create_model() called ==================================
2024-07-28 16:44:53,410:INFO:Initializing create_model()
2024-07-28 16:44:53,410:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:44:53,410:INFO:Checking exceptions
2024-07-28 16:44:53,410:INFO:Importing libraries
2024-07-28 16:44:53,410:INFO:Copying training dataset
2024-07-28 16:44:53,439:INFO:Defining folds
2024-07-28 16:44:53,439:INFO:Declaring metric variables
2024-07-28 16:44:53,439:INFO:Importing untrained model
2024-07-28 16:44:53,440:INFO:CatBoost Classifier Imported successfully
2024-07-28 16:44:53,440:INFO:Starting cross validation
2024-07-28 16:44:53,441:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:45:41,144:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,170:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,177:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,187:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,213:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,216:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,226:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,236:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,250:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,253:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,276:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,293:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,308:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,328:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,362:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:41,490:INFO:Calculating mean and std
2024-07-28 16:45:41,491:INFO:Creating metrics dataframe
2024-07-28 16:45:41,493:INFO:Uploading results into container
2024-07-28 16:45:41,494:INFO:Uploading model into container now
2024-07-28 16:45:41,494:INFO:_master_model_container: 4
2024-07-28 16:45:41,494:INFO:_display_container: 2
2024-07-28 16:45:41,494:INFO:<catboost.core.CatBoostClassifier object at 0x2ae875ca1510>
2024-07-28 16:45:41,494:INFO:create_model() successfully completed......................................
2024-07-28 16:45:41,621:INFO:SubProcess create_model() end ==================================
2024-07-28 16:45:41,621:INFO:Creating metrics dataframe
2024-07-28 16:45:41,624:INFO:Initializing Extra Trees Classifier
2024-07-28 16:45:41,624:INFO:Total runtime is 5.591626671950022 minutes
2024-07-28 16:45:41,624:INFO:SubProcess create_model() called ==================================
2024-07-28 16:45:41,624:INFO:Initializing create_model()
2024-07-28 16:45:41,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:45:41,624:INFO:Checking exceptions
2024-07-28 16:45:41,624:INFO:Importing libraries
2024-07-28 16:45:41,624:INFO:Copying training dataset
2024-07-28 16:45:41,656:INFO:Defining folds
2024-07-28 16:45:41,656:INFO:Declaring metric variables
2024-07-28 16:45:41,656:INFO:Importing untrained model
2024-07-28 16:45:41,657:INFO:Extra Trees Classifier Imported successfully
2024-07-28 16:45:41,657:INFO:Starting cross validation
2024-07-28 16:45:41,658:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:45:43,090:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,136:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,180:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,495:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,527:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,537:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,547:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,569:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,576:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,591:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,609:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,614:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,627:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,647:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:43,679:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:44,258:INFO:Calculating mean and std
2024-07-28 16:45:44,259:INFO:Creating metrics dataframe
2024-07-28 16:45:44,262:INFO:Uploading results into container
2024-07-28 16:45:44,263:INFO:Uploading model into container now
2024-07-28 16:45:44,263:INFO:_master_model_container: 5
2024-07-28 16:45:44,264:INFO:_display_container: 2
2024-07-28 16:45:44,264:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1000, verbose=0,
                     warm_start=False)
2024-07-28 16:45:44,264:INFO:create_model() successfully completed......................................
2024-07-28 16:45:44,461:INFO:SubProcess create_model() end ==================================
2024-07-28 16:45:44,461:INFO:Creating metrics dataframe
2024-07-28 16:45:44,464:INFO:Initializing Random Forest Classifier
2024-07-28 16:45:44,464:INFO:Total runtime is 5.638968133926391 minutes
2024-07-28 16:45:44,464:INFO:SubProcess create_model() called ==================================
2024-07-28 16:45:44,464:INFO:Initializing create_model()
2024-07-28 16:45:44,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:45:44,465:INFO:Checking exceptions
2024-07-28 16:45:44,465:INFO:Importing libraries
2024-07-28 16:45:44,465:INFO:Copying training dataset
2024-07-28 16:45:44,500:INFO:Defining folds
2024-07-28 16:45:44,500:INFO:Declaring metric variables
2024-07-28 16:45:44,500:INFO:Importing untrained model
2024-07-28 16:45:44,501:INFO:Random Forest Classifier Imported successfully
2024-07-28 16:45:44,501:INFO:Starting cross validation
2024-07-28 16:45:44,502:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:45:48,810:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:48,853:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:48,864:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:48,895:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:48,907:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:48,928:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:48,946:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:48,963:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:49,000:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:49,040:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:49,054:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:49,071:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:49,086:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:49,103:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:49,118:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:49,246:INFO:Calculating mean and std
2024-07-28 16:45:49,247:INFO:Creating metrics dataframe
2024-07-28 16:45:49,250:INFO:Uploading results into container
2024-07-28 16:45:49,250:INFO:Uploading model into container now
2024-07-28 16:45:49,251:INFO:_master_model_container: 6
2024-07-28 16:45:49,251:INFO:_display_container: 2
2024-07-28 16:45:49,251:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1000, verbose=0,
                       warm_start=False)
2024-07-28 16:45:49,251:INFO:create_model() successfully completed......................................
2024-07-28 16:45:49,435:INFO:SubProcess create_model() end ==================================
2024-07-28 16:45:49,435:INFO:Creating metrics dataframe
2024-07-28 16:45:49,438:INFO:Initializing Logistic Regression
2024-07-28 16:45:49,438:INFO:Total runtime is 5.7218691786130265 minutes
2024-07-28 16:45:49,438:INFO:SubProcess create_model() called ==================================
2024-07-28 16:45:49,439:INFO:Initializing create_model()
2024-07-28 16:45:49,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:45:49,439:INFO:Checking exceptions
2024-07-28 16:45:49,439:INFO:Importing libraries
2024-07-28 16:45:49,439:INFO:Copying training dataset
2024-07-28 16:45:49,475:INFO:Defining folds
2024-07-28 16:45:49,475:INFO:Declaring metric variables
2024-07-28 16:45:49,475:INFO:Importing untrained model
2024-07-28 16:45:49,476:INFO:Logistic Regression Imported successfully
2024-07-28 16:45:49,476:INFO:Starting cross validation
2024-07-28 16:45:49,477:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:45:51,846:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:45:51,861:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:51,894:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:51,927:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:51,932:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:45:51,939:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:45:51,947:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:51,954:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:51,980:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:51,988:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:52,014:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:52,021:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:52,038:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:45:52,046:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:45:52,051:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:52,059:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:52,082:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:52,090:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:52,113:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:52,121:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:52,253:INFO:Calculating mean and std
2024-07-28 16:45:52,254:INFO:Creating metrics dataframe
2024-07-28 16:45:52,257:INFO:Uploading results into container
2024-07-28 16:45:52,257:INFO:Uploading model into container now
2024-07-28 16:45:52,258:INFO:_master_model_container: 7
2024-07-28 16:45:52,258:INFO:_display_container: 2
2024-07-28 16:45:52,258:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1000, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-28 16:45:52,258:INFO:create_model() successfully completed......................................
2024-07-28 16:45:52,465:INFO:SubProcess create_model() end ==================================
2024-07-28 16:45:52,465:INFO:Creating metrics dataframe
2024-07-28 16:45:52,468:INFO:Initializing Linear Discriminant Analysis
2024-07-28 16:45:52,468:INFO:Total runtime is 5.77236688931783 minutes
2024-07-28 16:45:52,468:INFO:SubProcess create_model() called ==================================
2024-07-28 16:45:52,468:INFO:Initializing create_model()
2024-07-28 16:45:52,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:45:52,468:INFO:Checking exceptions
2024-07-28 16:45:52,469:INFO:Importing libraries
2024-07-28 16:45:52,469:INFO:Copying training dataset
2024-07-28 16:45:52,511:INFO:Defining folds
2024-07-28 16:45:52,512:INFO:Declaring metric variables
2024-07-28 16:45:52,512:INFO:Importing untrained model
2024-07-28 16:45:52,512:INFO:Linear Discriminant Analysis Imported successfully
2024-07-28 16:45:52,512:INFO:Starting cross validation
2024-07-28 16:45:52,514:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:45:56,676:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:45:56,684:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:45:56,690:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:45:56,691:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,698:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:45:56,699:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,705:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,712:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:45:56,713:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,724:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,727:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,732:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,739:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,747:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,756:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,760:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,765:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,772:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,782:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,795:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:45:56,921:INFO:Calculating mean and std
2024-07-28 16:45:56,922:INFO:Creating metrics dataframe
2024-07-28 16:45:56,924:INFO:Uploading results into container
2024-07-28 16:45:56,924:INFO:Uploading model into container now
2024-07-28 16:45:56,924:INFO:_master_model_container: 8
2024-07-28 16:45:56,924:INFO:_display_container: 2
2024-07-28 16:45:56,925:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-28 16:45:56,925:INFO:create_model() successfully completed......................................
2024-07-28 16:45:57,053:INFO:SubProcess create_model() end ==================================
2024-07-28 16:45:57,053:INFO:Creating metrics dataframe
2024-07-28 16:45:57,055:INFO:Initializing Quadratic Discriminant Analysis
2024-07-28 16:45:57,055:INFO:Total runtime is 5.848824024200439 minutes
2024-07-28 16:45:57,056:INFO:SubProcess create_model() called ==================================
2024-07-28 16:45:57,056:INFO:Initializing create_model()
2024-07-28 16:45:57,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:45:57,056:INFO:Checking exceptions
2024-07-28 16:45:57,056:INFO:Importing libraries
2024-07-28 16:45:57,056:INFO:Copying training dataset
2024-07-28 16:45:57,084:INFO:Defining folds
2024-07-28 16:45:57,084:INFO:Declaring metric variables
2024-07-28 16:45:57,084:INFO:Importing untrained model
2024-07-28 16:45:57,085:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-28 16:45:57,085:INFO:Starting cross validation
2024-07-28 16:45:57,086:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:46:00,244:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:00,260:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,284:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:00,294:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,299:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,327:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,331:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:00,332:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,345:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,364:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,373:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:00,378:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,388:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,392:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:00,406:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,411:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,423:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,440:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,456:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,471:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:00,600:INFO:Calculating mean and std
2024-07-28 16:46:00,601:INFO:Creating metrics dataframe
2024-07-28 16:46:00,602:INFO:Uploading results into container
2024-07-28 16:46:00,603:INFO:Uploading model into container now
2024-07-28 16:46:00,603:INFO:_master_model_container: 9
2024-07-28 16:46:00,603:INFO:_display_container: 2
2024-07-28 16:46:00,603:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-28 16:46:00,603:INFO:create_model() successfully completed......................................
2024-07-28 16:46:00,708:INFO:SubProcess create_model() end ==================================
2024-07-28 16:46:00,708:INFO:Creating metrics dataframe
2024-07-28 16:46:00,711:INFO:Initializing Decision Tree Classifier
2024-07-28 16:46:00,711:INFO:Total runtime is 5.909747922420501 minutes
2024-07-28 16:46:00,711:INFO:SubProcess create_model() called ==================================
2024-07-28 16:46:00,711:INFO:Initializing create_model()
2024-07-28 16:46:00,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:46:00,711:INFO:Checking exceptions
2024-07-28 16:46:00,711:INFO:Importing libraries
2024-07-28 16:46:00,711:INFO:Copying training dataset
2024-07-28 16:46:00,738:INFO:Defining folds
2024-07-28 16:46:00,738:INFO:Declaring metric variables
2024-07-28 16:46:00,738:INFO:Importing untrained model
2024-07-28 16:46:00,739:INFO:Decision Tree Classifier Imported successfully
2024-07-28 16:46:00,739:INFO:Starting cross validation
2024-07-28 16:46:00,740:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:46:05,576:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,578:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,610:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,611:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,622:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,643:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,643:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,655:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,688:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,721:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,754:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,788:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,825:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,856:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:05,887:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:06,011:INFO:Calculating mean and std
2024-07-28 16:46:06,012:INFO:Creating metrics dataframe
2024-07-28 16:46:06,014:INFO:Uploading results into container
2024-07-28 16:46:06,014:INFO:Uploading model into container now
2024-07-28 16:46:06,014:INFO:_master_model_container: 10
2024-07-28 16:46:06,015:INFO:_display_container: 2
2024-07-28 16:46:06,015:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1000, splitter='best')
2024-07-28 16:46:06,015:INFO:create_model() successfully completed......................................
2024-07-28 16:46:06,144:INFO:SubProcess create_model() end ==================================
2024-07-28 16:46:06,144:INFO:Creating metrics dataframe
2024-07-28 16:46:06,147:INFO:Initializing K Neighbors Classifier
2024-07-28 16:46:06,147:INFO:Total runtime is 6.00034730831782 minutes
2024-07-28 16:46:06,147:INFO:SubProcess create_model() called ==================================
2024-07-28 16:46:06,147:INFO:Initializing create_model()
2024-07-28 16:46:06,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:46:06,147:INFO:Checking exceptions
2024-07-28 16:46:06,147:INFO:Importing libraries
2024-07-28 16:46:06,147:INFO:Copying training dataset
2024-07-28 16:46:06,174:INFO:Defining folds
2024-07-28 16:46:06,174:INFO:Declaring metric variables
2024-07-28 16:46:06,174:INFO:Importing untrained model
2024-07-28 16:46:06,175:INFO:K Neighbors Classifier Imported successfully
2024-07-28 16:46:06,175:INFO:Starting cross validation
2024-07-28 16:46:06,176:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:46:11,058:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,063:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,071:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,074:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,091:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,096:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,105:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,107:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,118:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,123:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,128:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,138:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,140:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,150:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,182:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:11,312:INFO:Calculating mean and std
2024-07-28 16:46:11,313:INFO:Creating metrics dataframe
2024-07-28 16:46:11,315:INFO:Uploading results into container
2024-07-28 16:46:11,315:INFO:Uploading model into container now
2024-07-28 16:46:11,315:INFO:_master_model_container: 11
2024-07-28 16:46:11,315:INFO:_display_container: 2
2024-07-28 16:46:11,316:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-28 16:46:11,316:INFO:create_model() successfully completed......................................
2024-07-28 16:46:11,420:INFO:SubProcess create_model() end ==================================
2024-07-28 16:46:11,420:INFO:Creating metrics dataframe
2024-07-28 16:46:11,423:INFO:Initializing Ada Boost Classifier
2024-07-28 16:46:11,423:INFO:Total runtime is 6.088278567790985 minutes
2024-07-28 16:46:11,423:INFO:SubProcess create_model() called ==================================
2024-07-28 16:46:11,423:INFO:Initializing create_model()
2024-07-28 16:46:11,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:46:11,423:INFO:Checking exceptions
2024-07-28 16:46:11,423:INFO:Importing libraries
2024-07-28 16:46:11,423:INFO:Copying training dataset
2024-07-28 16:46:11,450:INFO:Defining folds
2024-07-28 16:46:11,450:INFO:Declaring metric variables
2024-07-28 16:46:11,450:INFO:Importing untrained model
2024-07-28 16:46:11,450:INFO:Ada Boost Classifier Imported successfully
2024-07-28 16:46:11,451:INFO:Starting cross validation
2024-07-28 16:46:11,452:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:46:12,074:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 16:46:12,082:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 16:46:12,164:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 16:46:12,203:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 16:46:14,473:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 16:46:19,325:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:19,338:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:19,370:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:19,401:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:19,527:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:19,527:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:19,534:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:19,541:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:19,541:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:19,548:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:19,572:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:19,574:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:19,580:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:19,604:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:19,606:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:19,612:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:21,636:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:21,650:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:21,681:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:21,712:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:21,844:INFO:Calculating mean and std
2024-07-28 16:46:21,844:INFO:Creating metrics dataframe
2024-07-28 16:46:21,846:INFO:Uploading results into container
2024-07-28 16:46:21,846:INFO:Uploading model into container now
2024-07-28 16:46:21,847:INFO:_master_model_container: 12
2024-07-28 16:46:21,847:INFO:_display_container: 2
2024-07-28 16:46:21,847:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1000)
2024-07-28 16:46:21,847:INFO:create_model() successfully completed......................................
2024-07-28 16:46:21,971:INFO:SubProcess create_model() end ==================================
2024-07-28 16:46:21,971:INFO:Creating metrics dataframe
2024-07-28 16:46:21,974:INFO:Initializing Naive Bayes
2024-07-28 16:46:21,974:INFO:Total runtime is 6.264133663972219 minutes
2024-07-28 16:46:21,974:INFO:SubProcess create_model() called ==================================
2024-07-28 16:46:21,974:INFO:Initializing create_model()
2024-07-28 16:46:21,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:46:21,974:INFO:Checking exceptions
2024-07-28 16:46:21,974:INFO:Importing libraries
2024-07-28 16:46:21,975:INFO:Copying training dataset
2024-07-28 16:46:22,007:INFO:Defining folds
2024-07-28 16:46:22,007:INFO:Declaring metric variables
2024-07-28 16:46:22,008:INFO:Importing untrained model
2024-07-28 16:46:22,008:INFO:Naive Bayes Imported successfully
2024-07-28 16:46:22,008:INFO:Starting cross validation
2024-07-28 16:46:22,009:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:46:22,758:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:22,775:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:22,792:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:22,809:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:22,826:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:22,838:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:22,842:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:22,843:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:22,872:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:22,878:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:22,906:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:22,912:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:25,126:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:25,157:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:25,188:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:25,310:INFO:Calculating mean and std
2024-07-28 16:46:25,311:INFO:Creating metrics dataframe
2024-07-28 16:46:25,313:INFO:Uploading results into container
2024-07-28 16:46:25,313:INFO:Uploading model into container now
2024-07-28 16:46:25,313:INFO:_master_model_container: 13
2024-07-28 16:46:25,313:INFO:_display_container: 2
2024-07-28 16:46:25,314:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-28 16:46:25,314:INFO:create_model() successfully completed......................................
2024-07-28 16:46:25,425:INFO:SubProcess create_model() end ==================================
2024-07-28 16:46:25,425:INFO:Creating metrics dataframe
2024-07-28 16:46:25,428:INFO:Initializing Ridge Classifier
2024-07-28 16:46:25,428:INFO:Total runtime is 6.321693865458171 minutes
2024-07-28 16:46:25,428:INFO:SubProcess create_model() called ==================================
2024-07-28 16:46:25,428:INFO:Initializing create_model()
2024-07-28 16:46:25,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:46:25,428:INFO:Checking exceptions
2024-07-28 16:46:25,428:INFO:Importing libraries
2024-07-28 16:46:25,428:INFO:Copying training dataset
2024-07-28 16:46:25,455:INFO:Defining folds
2024-07-28 16:46:25,455:INFO:Declaring metric variables
2024-07-28 16:46:25,455:INFO:Importing untrained model
2024-07-28 16:46:25,455:INFO:Ridge Classifier Imported successfully
2024-07-28 16:46:25,455:INFO:Starting cross validation
2024-07-28 16:46:25,457:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:46:26,102:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:26,120:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,129:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:26,143:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,156:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,160:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:26,163:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:26,171:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:26,174:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,176:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,177:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,187:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,189:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,207:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,209:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,210:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,224:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,241:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,242:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,258:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:26,381:INFO:Calculating mean and std
2024-07-28 16:46:26,382:INFO:Creating metrics dataframe
2024-07-28 16:46:26,383:INFO:Uploading results into container
2024-07-28 16:46:26,384:INFO:Uploading model into container now
2024-07-28 16:46:26,384:INFO:_master_model_container: 14
2024-07-28 16:46:26,384:INFO:_display_container: 2
2024-07-28 16:46:26,384:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1000, solver='auto',
                tol=0.0001)
2024-07-28 16:46:26,384:INFO:create_model() successfully completed......................................
2024-07-28 16:46:26,489:INFO:SubProcess create_model() end ==================================
2024-07-28 16:46:26,489:INFO:Creating metrics dataframe
2024-07-28 16:46:26,492:INFO:Initializing SVM - Linear Kernel
2024-07-28 16:46:26,492:INFO:Total runtime is 6.33943012158076 minutes
2024-07-28 16:46:26,492:INFO:SubProcess create_model() called ==================================
2024-07-28 16:46:26,492:INFO:Initializing create_model()
2024-07-28 16:46:26,492:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875ca3550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:46:26,492:INFO:Checking exceptions
2024-07-28 16:46:26,492:INFO:Importing libraries
2024-07-28 16:46:26,492:INFO:Copying training dataset
2024-07-28 16:46:26,519:INFO:Defining folds
2024-07-28 16:46:26,519:INFO:Declaring metric variables
2024-07-28 16:46:26,519:INFO:Importing untrained model
2024-07-28 16:46:26,519:INFO:SVM - Linear Kernel Imported successfully
2024-07-28 16:46:26,520:INFO:Starting cross validation
2024-07-28 16:46:26,521:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:46:27,544:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:27,559:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,593:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,627:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,672:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:27,683:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:27,686:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,697:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,720:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,730:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,753:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,763:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,809:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:27,822:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,853:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,881:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-28 16:46:27,885:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,895:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,928:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:27,959:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:46:28,084:INFO:Calculating mean and std
2024-07-28 16:46:28,085:INFO:Creating metrics dataframe
2024-07-28 16:46:28,086:INFO:Uploading results into container
2024-07-28 16:46:28,087:INFO:Uploading model into container now
2024-07-28 16:46:28,087:INFO:_master_model_container: 15
2024-07-28 16:46:28,087:INFO:_display_container: 2
2024-07-28 16:46:28,087:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1000, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-28 16:46:28,087:INFO:create_model() successfully completed......................................
2024-07-28 16:46:28,219:INFO:SubProcess create_model() end ==================================
2024-07-28 16:46:28,219:INFO:Creating metrics dataframe
2024-07-28 16:46:28,223:INFO:Initializing create_model()
2024-07-28 16:46:28,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1000, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:46:28,223:INFO:Checking exceptions
2024-07-28 16:46:28,224:INFO:Importing libraries
2024-07-28 16:46:28,224:INFO:Copying training dataset
2024-07-28 16:46:28,250:INFO:Defining folds
2024-07-28 16:46:28,250:INFO:Declaring metric variables
2024-07-28 16:46:28,251:INFO:Importing untrained model
2024-07-28 16:46:28,251:INFO:Declaring custom model
2024-07-28 16:46:28,251:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-28 16:46:28,252:INFO:Cross validation set to False
2024-07-28 16:46:28,252:INFO:Fitting Model
2024-07-28 16:46:28,889:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.003096 seconds.
2024-07-28 16:46:28,889:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-28 16:46:28,889:INFO:[LightGBM] [Info] Total Bins 10482
2024-07-28 16:46:28,889:INFO:[LightGBM] [Info] Number of data points in the train set: 32307, number of used features: 42
2024-07-28 16:46:28,890:INFO:[LightGBM] [Info] Start training from score -3.046102
2024-07-28 16:46:28,890:INFO:[LightGBM] [Info] Start training from score -1.895069
2024-07-28 16:46:28,891:INFO:[LightGBM] [Info] Start training from score -2.534105
2024-07-28 16:46:28,891:INFO:[LightGBM] [Info] Start training from score -1.963018
2024-07-28 16:46:28,891:INFO:[LightGBM] [Info] Start training from score -1.025832
2024-07-28 16:46:28,891:INFO:[LightGBM] [Info] Start training from score -1.496630
2024-07-28 16:46:30,324:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1000, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-28 16:46:30,324:INFO:create_model() successfully completed......................................
2024-07-28 16:46:30,499:INFO:Initializing create_model()
2024-07-28 16:46:30,499:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:46:30,499:INFO:Checking exceptions
2024-07-28 16:46:30,500:INFO:Importing libraries
2024-07-28 16:46:30,500:INFO:Copying training dataset
2024-07-28 16:46:30,541:INFO:Defining folds
2024-07-28 16:46:30,541:INFO:Declaring metric variables
2024-07-28 16:46:30,541:INFO:Importing untrained model
2024-07-28 16:46:30,541:INFO:Declaring custom model
2024-07-28 16:46:30,543:INFO:Extreme Gradient Boosting Imported successfully
2024-07-28 16:46:30,544:INFO:Cross validation set to False
2024-07-28 16:46:30,544:INFO:Fitting Model
2024-07-28 16:46:32,905:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2024-07-28 16:46:32,905:INFO:create_model() successfully completed......................................
2024-07-28 16:46:33,018:INFO:Initializing create_model()
2024-07-28 16:46:33,018:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=<catboost.core.CatBoostClassifier object at 0x2ae875ca1510>, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:46:33,018:INFO:Checking exceptions
2024-07-28 16:46:33,019:INFO:Importing libraries
2024-07-28 16:46:33,019:INFO:Copying training dataset
2024-07-28 16:46:33,052:INFO:Defining folds
2024-07-28 16:46:33,052:INFO:Declaring metric variables
2024-07-28 16:46:33,052:INFO:Importing untrained model
2024-07-28 16:46:33,052:INFO:Declaring custom model
2024-07-28 16:46:33,053:INFO:CatBoost Classifier Imported successfully
2024-07-28 16:46:33,054:INFO:Cross validation set to False
2024-07-28 16:46:33,054:INFO:Fitting Model
2024-07-28 16:46:42,788:INFO:<catboost.core.CatBoostClassifier object at 0x2ae864bbcee0>
2024-07-28 16:46:42,788:INFO:create_model() successfully completed......................................
2024-07-28 16:46:42,949:INFO:Initializing create_model()
2024-07-28 16:46:42,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1000, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:46:42,949:INFO:Checking exceptions
2024-07-28 16:46:42,950:INFO:Importing libraries
2024-07-28 16:46:42,950:INFO:Copying training dataset
2024-07-28 16:46:42,984:INFO:Defining folds
2024-07-28 16:46:42,984:INFO:Declaring metric variables
2024-07-28 16:46:42,985:INFO:Importing untrained model
2024-07-28 16:46:42,985:INFO:Declaring custom model
2024-07-28 16:46:42,985:INFO:Gradient Boosting Classifier Imported successfully
2024-07-28 16:46:42,987:INFO:Cross validation set to False
2024-07-28 16:46:42,987:INFO:Fitting Model
2024-07-28 16:51:07,664:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1000, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-28 16:51:07,664:INFO:create_model() successfully completed......................................
2024-07-28 16:51:07,817:INFO:Initializing create_model()
2024-07-28 16:51:07,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1000, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:07,817:INFO:Checking exceptions
2024-07-28 16:51:07,817:INFO:Importing libraries
2024-07-28 16:51:07,817:INFO:Copying training dataset
2024-07-28 16:51:07,848:INFO:Defining folds
2024-07-28 16:51:07,848:INFO:Declaring metric variables
2024-07-28 16:51:07,848:INFO:Importing untrained model
2024-07-28 16:51:07,848:INFO:Declaring custom model
2024-07-28 16:51:07,849:INFO:Random Forest Classifier Imported successfully
2024-07-28 16:51:07,850:INFO:Cross validation set to False
2024-07-28 16:51:07,850:INFO:Fitting Model
2024-07-28 16:51:09,594:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1000, verbose=0,
                       warm_start=False)
2024-07-28 16:51:09,594:INFO:create_model() successfully completed......................................
2024-07-28 16:51:09,722:INFO:Initializing create_model()
2024-07-28 16:51:09,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1000, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:09,722:INFO:Checking exceptions
2024-07-28 16:51:09,723:INFO:Importing libraries
2024-07-28 16:51:09,723:INFO:Copying training dataset
2024-07-28 16:51:09,754:INFO:Defining folds
2024-07-28 16:51:09,754:INFO:Declaring metric variables
2024-07-28 16:51:09,755:INFO:Importing untrained model
2024-07-28 16:51:09,755:INFO:Declaring custom model
2024-07-28 16:51:09,755:INFO:Extra Trees Classifier Imported successfully
2024-07-28 16:51:09,756:INFO:Cross validation set to False
2024-07-28 16:51:09,756:INFO:Fitting Model
2024-07-28 16:51:10,614:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1000, verbose=0,
                     warm_start=False)
2024-07-28 16:51:10,614:INFO:create_model() successfully completed......................................
2024-07-28 16:51:10,813:INFO:Initializing create_model()
2024-07-28 16:51:10,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1000, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:10,813:INFO:Checking exceptions
2024-07-28 16:51:10,814:INFO:Importing libraries
2024-07-28 16:51:10,814:INFO:Copying training dataset
2024-07-28 16:51:10,846:INFO:Defining folds
2024-07-28 16:51:10,846:INFO:Declaring metric variables
2024-07-28 16:51:10,846:INFO:Importing untrained model
2024-07-28 16:51:10,846:INFO:Declaring custom model
2024-07-28 16:51:10,847:INFO:Decision Tree Classifier Imported successfully
2024-07-28 16:51:10,848:INFO:Cross validation set to False
2024-07-28 16:51:10,848:INFO:Fitting Model
2024-07-28 16:51:13,550:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1000, splitter='best')
2024-07-28 16:51:13,550:INFO:create_model() successfully completed......................................
2024-07-28 16:51:13,735:INFO:Initializing create_model()
2024-07-28 16:51:13,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:13,735:INFO:Checking exceptions
2024-07-28 16:51:13,736:INFO:Importing libraries
2024-07-28 16:51:13,736:INFO:Copying training dataset
2024-07-28 16:51:13,766:INFO:Defining folds
2024-07-28 16:51:13,767:INFO:Declaring metric variables
2024-07-28 16:51:13,767:INFO:Importing untrained model
2024-07-28 16:51:13,767:INFO:Declaring custom model
2024-07-28 16:51:13,767:INFO:K Neighbors Classifier Imported successfully
2024-07-28 16:51:13,768:INFO:Cross validation set to False
2024-07-28 16:51:13,768:INFO:Fitting Model
2024-07-28 16:51:14,357:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-28 16:51:14,358:INFO:create_model() successfully completed......................................
2024-07-28 16:51:14,519:INFO:Initializing create_model()
2024-07-28 16:51:14,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1000, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:14,519:INFO:Checking exceptions
2024-07-28 16:51:14,520:INFO:Importing libraries
2024-07-28 16:51:14,520:INFO:Copying training dataset
2024-07-28 16:51:14,552:INFO:Defining folds
2024-07-28 16:51:14,552:INFO:Declaring metric variables
2024-07-28 16:51:14,552:INFO:Importing untrained model
2024-07-28 16:51:14,552:INFO:Declaring custom model
2024-07-28 16:51:14,553:INFO:Logistic Regression Imported successfully
2024-07-28 16:51:14,554:INFO:Cross validation set to False
2024-07-28 16:51:14,554:INFO:Fitting Model
2024-07-28 16:51:17,023:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1000, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-28 16:51:17,023:INFO:create_model() successfully completed......................................
2024-07-28 16:51:17,235:INFO:Initializing create_model()
2024-07-28 16:51:17,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:17,235:INFO:Checking exceptions
2024-07-28 16:51:17,236:INFO:Importing libraries
2024-07-28 16:51:17,236:INFO:Copying training dataset
2024-07-28 16:51:17,268:INFO:Defining folds
2024-07-28 16:51:17,268:INFO:Declaring metric variables
2024-07-28 16:51:17,268:INFO:Importing untrained model
2024-07-28 16:51:17,268:INFO:Declaring custom model
2024-07-28 16:51:17,268:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-28 16:51:17,270:INFO:Cross validation set to False
2024-07-28 16:51:17,270:INFO:Fitting Model
2024-07-28 16:51:17,903:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-28 16:51:17,903:INFO:create_model() successfully completed......................................
2024-07-28 16:51:18,017:INFO:Initializing create_model()
2024-07-28 16:51:18,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:18,017:INFO:Checking exceptions
2024-07-28 16:51:18,018:INFO:Importing libraries
2024-07-28 16:51:18,018:INFO:Copying training dataset
2024-07-28 16:51:18,053:INFO:Defining folds
2024-07-28 16:51:18,053:INFO:Declaring metric variables
2024-07-28 16:51:18,054:INFO:Importing untrained model
2024-07-28 16:51:18,054:INFO:Declaring custom model
2024-07-28 16:51:18,054:INFO:Linear Discriminant Analysis Imported successfully
2024-07-28 16:51:18,056:INFO:Cross validation set to False
2024-07-28 16:51:18,056:INFO:Fitting Model
2024-07-28 16:51:18,715:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-28 16:51:18,715:INFO:create_model() successfully completed......................................
2024-07-28 16:51:18,833:INFO:Initializing create_model()
2024-07-28 16:51:18,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1000), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:18,833:INFO:Checking exceptions
2024-07-28 16:51:18,834:INFO:Importing libraries
2024-07-28 16:51:18,834:INFO:Copying training dataset
2024-07-28 16:51:18,869:INFO:Defining folds
2024-07-28 16:51:18,869:INFO:Declaring metric variables
2024-07-28 16:51:18,870:INFO:Importing untrained model
2024-07-28 16:51:18,870:INFO:Declaring custom model
2024-07-28 16:51:18,870:INFO:Ada Boost Classifier Imported successfully
2024-07-28 16:51:18,872:INFO:Cross validation set to False
2024-07-28 16:51:18,872:INFO:Fitting Model
2024-07-28 16:51:28,016:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1000)
2024-07-28 16:51:28,017:INFO:create_model() successfully completed......................................
2024-07-28 16:51:28,170:INFO:Initializing create_model()
2024-07-28 16:51:28,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1000, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:28,170:INFO:Checking exceptions
2024-07-28 16:51:28,171:INFO:Importing libraries
2024-07-28 16:51:28,171:INFO:Copying training dataset
2024-07-28 16:51:28,201:INFO:Defining folds
2024-07-28 16:51:28,201:INFO:Declaring metric variables
2024-07-28 16:51:28,202:INFO:Importing untrained model
2024-07-28 16:51:28,202:INFO:Declaring custom model
2024-07-28 16:51:28,202:INFO:SVM - Linear Kernel Imported successfully
2024-07-28 16:51:28,203:INFO:Cross validation set to False
2024-07-28 16:51:28,203:INFO:Fitting Model
2024-07-28 16:51:29,270:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1000, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-28 16:51:29,271:INFO:create_model() successfully completed......................................
2024-07-28 16:51:29,386:INFO:Initializing create_model()
2024-07-28 16:51:29,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1000, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:29,386:INFO:Checking exceptions
2024-07-28 16:51:29,387:INFO:Importing libraries
2024-07-28 16:51:29,387:INFO:Copying training dataset
2024-07-28 16:51:29,417:INFO:Defining folds
2024-07-28 16:51:29,417:INFO:Declaring metric variables
2024-07-28 16:51:29,417:INFO:Importing untrained model
2024-07-28 16:51:29,417:INFO:Declaring custom model
2024-07-28 16:51:29,418:INFO:Ridge Classifier Imported successfully
2024-07-28 16:51:29,419:INFO:Cross validation set to False
2024-07-28 16:51:29,419:INFO:Fitting Model
2024-07-28 16:51:30,071:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1000, solver='auto',
                tol=0.0001)
2024-07-28 16:51:30,072:INFO:create_model() successfully completed......................................
2024-07-28 16:51:30,272:INFO:Initializing create_model()
2024-07-28 16:51:30,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:30,272:INFO:Checking exceptions
2024-07-28 16:51:30,273:INFO:Importing libraries
2024-07-28 16:51:30,273:INFO:Copying training dataset
2024-07-28 16:51:30,306:INFO:Defining folds
2024-07-28 16:51:30,306:INFO:Declaring metric variables
2024-07-28 16:51:30,307:INFO:Importing untrained model
2024-07-28 16:51:30,307:INFO:Declaring custom model
2024-07-28 16:51:30,307:INFO:Naive Bayes Imported successfully
2024-07-28 16:51:30,308:INFO:Cross validation set to False
2024-07-28 16:51:30,308:INFO:Fitting Model
2024-07-28 16:51:30,926:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-28 16:51:30,926:INFO:create_model() successfully completed......................................
2024-07-28 16:51:31,055:INFO:_master_model_container: 15
2024-07-28 16:51:31,055:INFO:_display_container: 2
2024-07-28 16:51:31,058:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1000, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), <catboost.core.CatBoostClassifier object at 0x2ae864bbcee0>, GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1000, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1000, verbose=0,
                       warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1000, verbose=0,
                     warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1000, splitter='best'), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1000, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1000), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1000, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1000, solver='auto',
                tol=0.0001), GaussianNB(priors=None, var_smoothing=1e-09)]
2024-07-28 16:51:31,058:INFO:compare_models() successfully completed......................................
2024-07-28 16:51:31,062:INFO:Initializing predict_model()
2024-07-28 16:51:31,062:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1000, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae84ae29510>)
2024-07-28 16:51:31,062:INFO:Checking exceptions
2024-07-28 16:51:31,062:INFO:Preloading libraries
2024-07-28 16:51:31,738:INFO:Initializing calibrate_model()
2024-07-28 16:51:31,738:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1000, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 16:51:31,738:INFO:Checking exceptions
2024-07-28 16:51:31,748:INFO:Preloading libraries
2024-07-28 16:51:31,748:INFO:Preparing display monitor
2024-07-28 16:51:31,749:INFO:Getting model name
2024-07-28 16:51:31,749:INFO:Base model : Light Gradient Boosting Machine
2024-07-28 16:51:31,750:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 16:51:31,750:INFO:SubProcess create_model() called ==================================
2024-07-28 16:51:31,751:INFO:Initializing create_model()
2024-07-28 16:51:31,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LGBMClassifier(boosting_type='gbdt',
                                                class_weight=None,
                                                colsample_bytree=1.0,
                                                importance_type='split',
                                                learning_rate=0.1, max_depth=-1,
                                                min_child_samples=20,
                                                min_child_weight=0.001,
                                                min_split_gain=0.0,
                                                n_estimators=100, n_jobs=-1,
                                                num_leaves=31, objective=None,
                                                random_state=1000,
                                                reg_alpha=0.0, reg_lambda=0.0,
                                                subsample=1.0,
                                                subsample_for_bin=200000,
                                                subsample_freq=0),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae7f07363b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:51:31,751:INFO:Checking exceptions
2024-07-28 16:51:31,751:INFO:Importing libraries
2024-07-28 16:51:31,751:INFO:Copying training dataset
2024-07-28 16:51:31,777:INFO:Defining folds
2024-07-28 16:51:31,778:INFO:Declaring metric variables
2024-07-28 16:51:31,778:INFO:Importing untrained model
2024-07-28 16:51:31,778:INFO:Declaring custom model
2024-07-28 16:51:31,779:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-28 16:51:31,779:INFO:Starting cross validation
2024-07-28 16:51:31,780:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:55:05,832:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:05,833:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:05,914:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:05,927:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:05,995:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:06,007:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:08,329:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:08,451:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:08,583:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:09,421:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:09,494:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:09,536:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:10,619:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:10,661:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:10,702:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:55:10,833:INFO:Calculating mean and std
2024-07-28 16:55:10,834:INFO:Creating metrics dataframe
2024-07-28 16:55:10,836:INFO:Finalizing model
2024-07-28 16:55:11,555:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001903 seconds.
2024-07-28 16:55:11,556:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-28 16:55:11,556:INFO:[LightGBM] [Info] Total Bins 10482
2024-07-28 16:55:11,556:INFO:[LightGBM] [Info] Number of data points in the train set: 25845, number of used features: 42
2024-07-28 16:55:11,557:INFO:[LightGBM] [Info] Start training from score -3.045916
2024-07-28 16:55:11,557:INFO:[LightGBM] [Info] Start training from score -1.895252
2024-07-28 16:55:11,557:INFO:[LightGBM] [Info] Start training from score -2.533790
2024-07-28 16:55:11,557:INFO:[LightGBM] [Info] Start training from score -1.963160
2024-07-28 16:55:11,557:INFO:[LightGBM] [Info] Start training from score -1.025765
2024-07-28 16:55:11,557:INFO:[LightGBM] [Info] Start training from score -1.496676
2024-07-28 16:55:12,914:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002234 seconds.
2024-07-28 16:55:12,914:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-28 16:55:12,915:INFO:[LightGBM] [Info] Total Bins 10482
2024-07-28 16:55:12,915:INFO:[LightGBM] [Info] Number of data points in the train set: 25845, number of used features: 42
2024-07-28 16:55:12,915:INFO:[LightGBM] [Info] Start training from score -3.046730
2024-07-28 16:55:12,915:INFO:[LightGBM] [Info] Start training from score -1.894994
2024-07-28 16:55:12,915:INFO:[LightGBM] [Info] Start training from score -2.533790
2024-07-28 16:55:12,916:INFO:[LightGBM] [Info] Start training from score -1.963160
2024-07-28 16:55:12,916:INFO:[LightGBM] [Info] Start training from score -1.025765
2024-07-28 16:55:12,916:INFO:[LightGBM] [Info] Start training from score -1.496676
2024-07-28 16:55:14,353:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002012 seconds.
2024-07-28 16:55:14,353:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-28 16:55:14,354:INFO:[LightGBM] [Info] Total Bins 10482
2024-07-28 16:55:14,354:INFO:[LightGBM] [Info] Number of data points in the train set: 25846, number of used features: 42
2024-07-28 16:55:14,354:INFO:[LightGBM] [Info] Start training from score -3.045955
2024-07-28 16:55:14,354:INFO:[LightGBM] [Info] Start training from score -1.895033
2024-07-28 16:55:14,354:INFO:[LightGBM] [Info] Start training from score -2.534316
2024-07-28 16:55:14,354:INFO:[LightGBM] [Info] Start training from score -1.962923
2024-07-28 16:55:14,354:INFO:[LightGBM] [Info] Start training from score -1.025804
2024-07-28 16:55:14,355:INFO:[LightGBM] [Info] Start training from score -1.496715
2024-07-28 16:55:15,827:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002747 seconds.
2024-07-28 16:55:15,827:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-28 16:55:15,827:INFO:[LightGBM] [Info] Total Bins 10482
2024-07-28 16:55:15,827:INFO:[LightGBM] [Info] Number of data points in the train set: 25846, number of used features: 42
2024-07-28 16:55:15,828:INFO:[LightGBM] [Info] Start training from score -3.045955
2024-07-28 16:55:15,828:INFO:[LightGBM] [Info] Start training from score -1.895033
2024-07-28 16:55:15,828:INFO:[LightGBM] [Info] Start training from score -2.534316
2024-07-28 16:55:15,828:INFO:[LightGBM] [Info] Start training from score -1.962923
2024-07-28 16:55:15,828:INFO:[LightGBM] [Info] Start training from score -1.025912
2024-07-28 16:55:15,828:INFO:[LightGBM] [Info] Start training from score -1.496542
2024-07-28 16:55:17,338:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.003163 seconds.
2024-07-28 16:55:17,339:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-28 16:55:17,339:INFO:[LightGBM] [Info] Total Bins 10482
2024-07-28 16:55:17,339:INFO:[LightGBM] [Info] Number of data points in the train set: 25846, number of used features: 42
2024-07-28 16:55:17,340:INFO:[LightGBM] [Info] Start training from score -3.045955
2024-07-28 16:55:17,340:INFO:[LightGBM] [Info] Start training from score -1.895033
2024-07-28 16:55:17,340:INFO:[LightGBM] [Info] Start training from score -2.534316
2024-07-28 16:55:17,340:INFO:[LightGBM] [Info] Start training from score -1.962923
2024-07-28 16:55:17,340:INFO:[LightGBM] [Info] Start training from score -1.025912
2024-07-28 16:55:17,340:INFO:[LightGBM] [Info] Start training from score -1.496542
2024-07-28 16:55:18,764:INFO:Uploading results into container
2024-07-28 16:55:18,767:INFO:Uploading model into container now
2024-07-28 16:55:18,768:INFO:_master_model_container: 16
2024-07-28 16:55:18,768:INFO:_display_container: 4
2024-07-28 16:55:18,770:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LGBMClassifier(boosting_type='gbdt',
                                                class_weight=None,
                                                colsample_bytree=1.0,
                                                importance_type='split',
                                                learning_rate=0.1, max_depth=-1,
                                                min_child_samples=20,
                                                min_child_weight=0.001,
                                                min_split_gain=0.0,
                                                n_estimators=100, n_jobs=-1,
                                                num_leaves=31, objective=None,
                                                random_state=1000,
                                                reg_alpha=0.0, reg_lambda=0.0,
                                                subsample=1.0,
                                                subsample_for_bin=200000,
                                                subsample_freq=0),
                       method='sigmoid', n_jobs=None)
2024-07-28 16:55:18,770:INFO:create_model() successfully completed......................................
2024-07-28 16:55:19,046:INFO:SubProcess create_model() end ==================================
2024-07-28 16:55:19,054:INFO:_master_model_container: 16
2024-07-28 16:55:19,054:INFO:_display_container: 4
2024-07-28 16:55:19,055:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LGBMClassifier(boosting_type='gbdt',
                                                class_weight=None,
                                                colsample_bytree=1.0,
                                                importance_type='split',
                                                learning_rate=0.1, max_depth=-1,
                                                min_child_samples=20,
                                                min_child_weight=0.001,
                                                min_split_gain=0.0,
                                                n_estimators=100, n_jobs=-1,
                                                num_leaves=31, objective=None,
                                                random_state=1000,
                                                reg_alpha=0.0, reg_lambda=0.0,
                                                subsample=1.0,
                                                subsample_for_bin=200000,
                                                subsample_freq=0),
                       method='sigmoid', n_jobs=None)
2024-07-28 16:55:19,055:INFO:calibrate_model() successfully completed......................................
2024-07-28 16:55:19,195:INFO:Initializing predict_model()
2024-07-28 16:55:19,195:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LGBMClassifier(boosting_type='gbdt',
                                                class_weight=None,
                                                colsample_bytree=1.0,
                                                importance_type='split',
                                                learning_rate=0.1, max_depth=-1,
                                                min_child_samples=20,
                                                min_child_weight=0.001,
                                                min_split_gain=0.0,
                                                n_estimators=100, n_jobs=-1,
                                                num_leaves=31, objective=None,
                                                random_state=1000,
                                                reg_alpha=0.0, reg_lambda=0.0,
                                                subsample=1.0,
                                                subsample_for_bin=200000,
                                                subsample_freq=0),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae84ad43760>)
2024-07-28 16:55:19,195:INFO:Checking exceptions
2024-07-28 16:55:19,195:INFO:Preloading libraries
2024-07-28 16:55:42,306:INFO:Initializing predict_model()
2024-07-28 16:55:42,307:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f69a6b00>)
2024-07-28 16:55:42,307:INFO:Checking exceptions
2024-07-28 16:55:42,307:INFO:Preloading libraries
2024-07-28 16:55:43,163:INFO:Initializing calibrate_model()
2024-07-28 16:55:43,164:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 16:55:43,164:INFO:Checking exceptions
2024-07-28 16:55:43,175:INFO:Preloading libraries
2024-07-28 16:55:43,176:INFO:Preparing display monitor
2024-07-28 16:55:43,177:INFO:Getting model name
2024-07-28 16:55:43,177:INFO:Base model : Extreme Gradient Boosting
2024-07-28 16:55:43,177:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 16:55:43,177:INFO:SubProcess create_model() called ==================================
2024-07-28 16:55:43,179:INFO:Initializing create_model()
2024-07-28 16:55:43,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=XGBClassifier(base_score=None,
                                               booster='gbtree', callbacks=None,
                                               colsample_bylevel=None,
                                               colsample_bynode=None,
                                               colsample_bytree=None,
                                               device='cpu',
                                               early_stopping_rounds=None,
                                               enable_categorical=False,
                                               eval_metric=None,
                                               feature_types=None, gamma=None,
                                               grow_policy=None,
                                               importance_type=None,
                                               interaction_constraints=None,
                                               learning_rate=None, max_bin=None,
                                               max_cat_threshold=None,
                                               max_cat_to_onehot=None,
                                               max_delta_step=None,
                                               max_depth=None, max_leaves=None,
                                               min_child_weight=None,
                                               missing=nan,
                                               monotone_constraints=None,
                                               multi_strategy=None,
                                               n_estimators=None, n_jobs=-1,
                                               num_parallel_tree=None,
                                               objective='multi:softprob', ...),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae875dda380>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:55:43,179:INFO:Checking exceptions
2024-07-28 16:55:43,179:INFO:Importing libraries
2024-07-28 16:55:43,179:INFO:Copying training dataset
2024-07-28 16:55:43,208:INFO:Defining folds
2024-07-28 16:55:43,208:INFO:Declaring metric variables
2024-07-28 16:55:43,208:INFO:Importing untrained model
2024-07-28 16:55:43,208:INFO:Declaring custom model
2024-07-28 16:55:43,210:INFO:Extreme Gradient Boosting Imported successfully
2024-07-28 16:55:43,210:INFO:Starting cross validation
2024-07-28 16:55:43,211:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:56:19,454:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:19,490:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:19,491:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:19,525:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:19,526:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:19,560:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:19,823:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:19,854:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:19,885:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:20,067:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:20,099:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:20,130:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:20,158:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:20,189:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:20,220:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:56:20,347:INFO:Calculating mean and std
2024-07-28 16:56:20,348:INFO:Creating metrics dataframe
2024-07-28 16:56:20,350:INFO:Finalizing model
2024-07-28 16:56:28,412:INFO:Uploading results into container
2024-07-28 16:56:28,413:INFO:Uploading model into container now
2024-07-28 16:56:28,413:INFO:_master_model_container: 17
2024-07-28 16:56:28,413:INFO:_display_container: 7
2024-07-28 16:56:28,416:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=XGBClassifier(base_score=None,
                                               booster='gbtree', callbacks=None,
                                               colsample_bylevel=None,
                                               colsample_bynode=None,
                                               colsample_bytree=None,
                                               device='cpu',
                                               early_stopping_rounds=None,
                                               enable_categorical=False,
                                               eval_metric=None,
                                               feature_types=None, gamma=None,
                                               grow_policy=None,
                                               importance_type=None,
                                               interaction_constraints=None,
                                               learning_rate=None, max_bin=None,
                                               max_cat_threshold=None,
                                               max_cat_to_onehot=None,
                                               max_delta_step=None,
                                               max_depth=None, max_leaves=None,
                                               min_child_weight=None,
                                               missing=nan,
                                               monotone_constraints=None,
                                               multi_strategy=None,
                                               n_estimators=None, n_jobs=-1,
                                               num_parallel_tree=None,
                                               objective='multi:softprob', ...),
                       method='sigmoid', n_jobs=None)
2024-07-28 16:56:28,416:INFO:create_model() successfully completed......................................
2024-07-28 16:56:28,583:INFO:SubProcess create_model() end ==================================
2024-07-28 16:56:28,590:INFO:_master_model_container: 17
2024-07-28 16:56:28,590:INFO:_display_container: 7
2024-07-28 16:56:28,593:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=XGBClassifier(base_score=None,
                                               booster='gbtree', callbacks=None,
                                               colsample_bylevel=None,
                                               colsample_bynode=None,
                                               colsample_bytree=None,
                                               device='cpu',
                                               early_stopping_rounds=None,
                                               enable_categorical=False,
                                               eval_metric=None,
                                               feature_types=None, gamma=None,
                                               grow_policy=None,
                                               importance_type=None,
                                               interaction_constraints=None,
                                               learning_rate=None, max_bin=None,
                                               max_cat_threshold=None,
                                               max_cat_to_onehot=None,
                                               max_delta_step=None,
                                               max_depth=None, max_leaves=None,
                                               min_child_weight=None,
                                               missing=nan,
                                               monotone_constraints=None,
                                               multi_strategy=None,
                                               n_estimators=None, n_jobs=-1,
                                               num_parallel_tree=None,
                                               objective='multi:softprob', ...),
                       method='sigmoid', n_jobs=None)
2024-07-28 16:56:28,593:INFO:calibrate_model() successfully completed......................................
2024-07-28 16:56:28,735:INFO:Initializing predict_model()
2024-07-28 16:56:28,736:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=XGBClassifier(base_score=None,
                                               booster='gbtree', callbacks=None,
                                               colsample_bylevel=None,
                                               colsample_bynode=None,
                                               colsample_bytree=None,
                                               device='cpu',
                                               early_stopping_rounds=None,
                                               enable_categorical=False,
                                               eval_metric=None,
                                               feature_types=None, gamma=None,
                                               grow_policy=None,
                                               importance_type=None,
                                               interaction_constraints=None,
                                               learning_rate=None, max_bin=None,
                                               max_cat_threshold=None,
                                               max_cat_to_onehot=None,
                                               max_delta_step=None,
                                               max_depth=None, max_leaves=None,
                                               min_child_weight=None,
                                               missing=nan,
                                               monotone_constraints=None,
                                               multi_strategy=None,
                                               n_estimators=None, n_jobs=-1,
                                               num_parallel_tree=None,
                                               objective='multi:softprob', ...),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875d6beb0>)
2024-07-28 16:56:28,736:INFO:Checking exceptions
2024-07-28 16:56:28,736:INFO:Preloading libraries
2024-07-28 16:56:32,608:INFO:Initializing predict_model()
2024-07-28 16:56:32,608:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=<catboost.core.CatBoostClassifier object at 0x2ae864bbcee0>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae864c69a20>)
2024-07-28 16:56:32,608:INFO:Checking exceptions
2024-07-28 16:56:32,608:INFO:Preloading libraries
2024-07-28 16:56:33,295:INFO:Initializing calibrate_model()
2024-07-28 16:56:33,296:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=<catboost.core.CatBoostClassifier object at 0x2ae864bbcee0>, method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 16:56:33,296:INFO:Checking exceptions
2024-07-28 16:56:33,307:INFO:Preloading libraries
2024-07-28 16:56:33,307:INFO:Preparing display monitor
2024-07-28 16:56:33,308:INFO:Getting model name
2024-07-28 16:56:33,308:INFO:Base model : CatBoost Classifier
2024-07-28 16:56:33,309:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 16:56:33,309:INFO:SubProcess create_model() called ==================================
2024-07-28 16:56:33,309:INFO:Initializing create_model()
2024-07-28 16:56:33,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x2ae864bbcee0>,
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae864c777c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 16:56:33,309:INFO:Checking exceptions
2024-07-28 16:56:33,309:INFO:Importing libraries
2024-07-28 16:56:33,309:INFO:Copying training dataset
2024-07-28 16:56:33,337:INFO:Defining folds
2024-07-28 16:56:33,337:INFO:Declaring metric variables
2024-07-28 16:56:33,337:INFO:Importing untrained model
2024-07-28 16:56:33,337:INFO:Declaring custom model
2024-07-28 16:56:33,338:INFO:CatBoost Classifier Imported successfully
2024-07-28 16:56:33,338:INFO:Starting cross validation
2024-07-28 16:56:33,339:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 16:59:57,778:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:59:57,830:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 16:59:57,874:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,030:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,047:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,077:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,092:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,122:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,136:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,556:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,591:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,628:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,733:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,766:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,804:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:00:01,950:INFO:Calculating mean and std
2024-07-28 17:00:01,952:INFO:Creating metrics dataframe
2024-07-28 17:00:01,956:INFO:Finalizing model
2024-07-28 17:00:42,814:INFO:Uploading results into container
2024-07-28 17:00:42,816:INFO:Uploading model into container now
2024-07-28 17:00:42,817:INFO:_master_model_container: 18
2024-07-28 17:00:42,817:INFO:_display_container: 10
2024-07-28 17:00:42,818:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x2ae864bbc1c0>,
                       method='sigmoid', n_jobs=None)
2024-07-28 17:00:42,818:INFO:create_model() successfully completed......................................
2024-07-28 17:00:43,018:INFO:SubProcess create_model() end ==================================
2024-07-28 17:00:43,024:INFO:_master_model_container: 18
2024-07-28 17:00:43,024:INFO:_display_container: 10
2024-07-28 17:00:43,024:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x2ae864bbc1c0>,
                       method='sigmoid', n_jobs=None)
2024-07-28 17:00:43,024:INFO:calibrate_model() successfully completed......................................
2024-07-28 17:00:43,128:INFO:Initializing predict_model()
2024-07-28 17:00:43,128:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x2ae864bbc1c0>,
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875ce4a60>)
2024-07-28 17:00:43,128:INFO:Checking exceptions
2024-07-28 17:00:43,128:INFO:Preloading libraries
2024-07-28 17:03:23,099:INFO:Initializing predict_model()
2024-07-28 17:03:23,100:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1000, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f6ac3b50>)
2024-07-28 17:03:23,100:INFO:Checking exceptions
2024-07-28 17:03:23,100:INFO:Preloading libraries
2024-07-28 17:03:23,951:INFO:Initializing calibrate_model()
2024-07-28 17:03:23,951:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1000, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 17:03:23,951:INFO:Checking exceptions
2024-07-28 17:03:23,962:INFO:Preloading libraries
2024-07-28 17:03:23,962:INFO:Preparing display monitor
2024-07-28 17:03:23,963:INFO:Getting model name
2024-07-28 17:03:23,963:INFO:Base model : Gradient Boosting Classifier
2024-07-28 17:03:23,964:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 17:03:23,964:INFO:SubProcess create_model() called ==================================
2024-07-28 17:03:23,965:INFO:Initializing create_model()
2024-07-28 17:03:23,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=GradientBoostingClassifier(ccp_alpha=0.0,
                                                            criterion='friedman_mse',
                                                            init=None,
                                                            learning_rate=0.1,
                                                            loss='log_loss',
                                                            max_depth=3,
                                                            max_features=None,
                                                            max_leaf_nodes=None,
                                                            min_impurity_decrease=0.0,
                                                            min_samples_leaf=1,
                                                            min_samples_split=2,
                                                            min_weight_fraction_leaf=0.0,
                                                            n_estimators=100,
                                                            n_iter_no_change=None,
                                                            random_state=1000,
                                                            subsample=1.0,
                                                            tol=0.0001,
                                                            validation_fraction=0.1,
                                                            verbose=0,
                                                            warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae864ba78e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 17:03:23,965:INFO:Checking exceptions
2024-07-28 17:03:23,965:INFO:Importing libraries
2024-07-28 17:03:23,965:INFO:Copying training dataset
2024-07-28 17:03:23,991:INFO:Defining folds
2024-07-28 17:03:23,991:INFO:Declaring metric variables
2024-07-28 17:03:23,991:INFO:Importing untrained model
2024-07-28 17:03:23,991:INFO:Declaring custom model
2024-07-28 17:03:23,992:INFO:Gradient Boosting Classifier Imported successfully
2024-07-28 17:03:23,992:INFO:Starting cross validation
2024-07-28 17:03:23,993:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 17:18:03,652:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:03,686:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:03,719:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:05,103:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:05,137:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:05,171:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:05,891:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:05,923:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:05,953:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:08,982:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:09,014:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:09,045:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:09,927:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:09,959:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:09,990:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 17:18:10,119:INFO:Calculating mean and std
2024-07-28 17:18:10,119:INFO:Creating metrics dataframe
2024-07-28 17:18:10,122:INFO:Finalizing model
2024-07-28 17:35:41,641:INFO:Uploading results into container
2024-07-28 17:35:41,642:INFO:Uploading model into container now
2024-07-28 17:35:41,643:INFO:_master_model_container: 19
2024-07-28 17:35:41,643:INFO:_display_container: 13
2024-07-28 17:35:41,644:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=GradientBoostingClassifier(ccp_alpha=0.0,
                                                            criterion='friedman_mse',
                                                            init=None,
                                                            learning_rate=0.1,
                                                            loss='log_loss',
                                                            max_depth=3,
                                                            max_features=None,
                                                            max_leaf_nodes=None,
                                                            min_impurity_decrease=0.0,
                                                            min_samples_leaf=1,
                                                            min_samples_split=2,
                                                            min_weight_fraction_leaf=0.0,
                                                            n_estimators=100,
                                                            n_iter_no_change=None,
                                                            random_state=1000,
                                                            subsample=1.0,
                                                            tol=0.0001,
                                                            validation_fraction=0.1,
                                                            verbose=0,
                                                            warm_start=False),
                       method='sigmoid', n_jobs=None)
2024-07-28 17:35:41,644:INFO:create_model() successfully completed......................................
2024-07-28 17:35:41,873:INFO:SubProcess create_model() end ==================================
2024-07-28 17:35:41,879:INFO:_master_model_container: 19
2024-07-28 17:35:41,879:INFO:_display_container: 13
2024-07-28 17:35:41,880:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=GradientBoostingClassifier(ccp_alpha=0.0,
                                                            criterion='friedman_mse',
                                                            init=None,
                                                            learning_rate=0.1,
                                                            loss='log_loss',
                                                            max_depth=3,
                                                            max_features=None,
                                                            max_leaf_nodes=None,
                                                            min_impurity_decrease=0.0,
                                                            min_samples_leaf=1,
                                                            min_samples_split=2,
                                                            min_weight_fraction_leaf=0.0,
                                                            n_estimators=100,
                                                            n_iter_no_change=None,
                                                            random_state=1000,
                                                            subsample=1.0,
                                                            tol=0.0001,
                                                            validation_fraction=0.1,
                                                            verbose=0,
                                                            warm_start=False),
                       method='sigmoid', n_jobs=None)
2024-07-28 17:35:41,880:INFO:calibrate_model() successfully completed......................................
2024-07-28 17:35:42,026:INFO:Initializing predict_model()
2024-07-28 17:35:42,026:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=GradientBoostingClassifier(ccp_alpha=0.0,
                                                            criterion='friedman_mse',
                                                            init=None,
                                                            learning_rate=0.1,
                                                            loss='log_loss',
                                                            max_depth=3,
                                                            max_features=None,
                                                            max_leaf_nodes=None,
                                                            min_impurity_decrease=0.0,
                                                            min_samples_leaf=1,
                                                            min_samples_split=2,
                                                            min_weight_fraction_leaf=0.0,
                                                            n_estimators=100,
                                                            n_iter_no_change=None,
                                                            random_state=1000,
                                                            subsample=1.0,
                                                            tol=0.0001,
                                                            validation_fraction=0.1,
                                                            verbose=0,
                                                            warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875d6bf40>)
2024-07-28 17:35:42,026:INFO:Checking exceptions
2024-07-28 17:35:42,026:INFO:Preloading libraries
2024-07-28 18:10:38,209:INFO:Initializing predict_model()
2024-07-28 18:10:38,209:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1000, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f6be0040>)
2024-07-28 18:10:38,209:INFO:Checking exceptions
2024-07-28 18:10:38,209:INFO:Preloading libraries
2024-07-28 18:10:38,998:INFO:Initializing calibrate_model()
2024-07-28 18:10:38,998:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1000, verbose=0,
                       warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 18:10:38,998:INFO:Checking exceptions
2024-07-28 18:10:39,010:INFO:Preloading libraries
2024-07-28 18:10:39,010:INFO:Preparing display monitor
2024-07-28 18:10:39,011:INFO:Getting model name
2024-07-28 18:10:39,012:INFO:Base model : Random Forest Classifier
2024-07-28 18:10:39,012:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 18:10:39,012:INFO:SubProcess create_model() called ==================================
2024-07-28 18:10:39,013:INFO:Initializing create_model()
2024-07-28 18:10:39,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=1000,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae7f6a2b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 18:10:39,013:INFO:Checking exceptions
2024-07-28 18:10:39,013:INFO:Importing libraries
2024-07-28 18:10:39,013:INFO:Copying training dataset
2024-07-28 18:10:39,043:INFO:Defining folds
2024-07-28 18:10:39,043:INFO:Declaring metric variables
2024-07-28 18:10:39,043:INFO:Importing untrained model
2024-07-28 18:10:39,043:INFO:Declaring custom model
2024-07-28 18:10:39,044:INFO:Random Forest Classifier Imported successfully
2024-07-28 18:10:39,044:INFO:Starting cross validation
2024-07-28 18:10:39,046:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 18:10:57,657:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,669:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,682:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,694:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,705:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,718:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,729:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,739:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,753:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,849:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,885:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,908:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,924:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,943:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:57,978:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:10:58,111:INFO:Calculating mean and std
2024-07-28 18:10:58,112:INFO:Creating metrics dataframe
2024-07-28 18:10:58,116:INFO:Finalizing model
2024-07-28 18:11:03,807:INFO:Uploading results into container
2024-07-28 18:11:03,808:INFO:Uploading model into container now
2024-07-28 18:11:03,809:INFO:_master_model_container: 20
2024-07-28 18:11:03,809:INFO:_display_container: 16
2024-07-28 18:11:03,810:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=1000,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:11:03,810:INFO:create_model() successfully completed......................................
2024-07-28 18:11:04,032:INFO:SubProcess create_model() end ==================================
2024-07-28 18:11:04,038:INFO:_master_model_container: 20
2024-07-28 18:11:04,038:INFO:_display_container: 16
2024-07-28 18:11:04,039:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=1000,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:11:04,039:INFO:calibrate_model() successfully completed......................................
2024-07-28 18:11:04,193:INFO:Initializing predict_model()
2024-07-28 18:11:04,194:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=1000,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875d6a8c0>)
2024-07-28 18:11:04,194:INFO:Checking exceptions
2024-07-28 18:11:04,194:INFO:Preloading libraries
2024-07-28 18:11:44,929:INFO:Initializing predict_model()
2024-07-28 18:11:44,929:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1000, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f69bf130>)
2024-07-28 18:11:44,929:INFO:Checking exceptions
2024-07-28 18:11:44,929:INFO:Preloading libraries
2024-07-28 18:11:45,737:INFO:Initializing calibrate_model()
2024-07-28 18:11:45,737:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1000, verbose=0,
                     warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 18:11:45,737:INFO:Checking exceptions
2024-07-28 18:11:45,749:INFO:Preloading libraries
2024-07-28 18:11:45,749:INFO:Preparing display monitor
2024-07-28 18:11:45,750:INFO:Getting model name
2024-07-28 18:11:45,750:INFO:Base model : Extra Trees Classifier
2024-07-28 18:11:45,751:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 18:11:45,751:INFO:SubProcess create_model() called ==================================
2024-07-28 18:11:45,752:INFO:Initializing create_model()
2024-07-28 18:11:45,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=ExtraTreesClassifier(bootstrap=False,
                                                      ccp_alpha=0.0,
                                                      class_weight=None,
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      random_state=1000,
                                                      verbose=0,
                                                      warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae7f6a2b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 18:11:45,752:INFO:Checking exceptions
2024-07-28 18:11:45,752:INFO:Importing libraries
2024-07-28 18:11:45,752:INFO:Copying training dataset
2024-07-28 18:11:45,782:INFO:Defining folds
2024-07-28 18:11:45,782:INFO:Declaring metric variables
2024-07-28 18:11:45,782:INFO:Importing untrained model
2024-07-28 18:11:45,782:INFO:Declaring custom model
2024-07-28 18:11:45,783:INFO:Extra Trees Classifier Imported successfully
2024-07-28 18:11:45,783:INFO:Starting cross validation
2024-07-28 18:11:45,784:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 18:11:53,826:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:53,868:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:53,910:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,167:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,170:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,173:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,191:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,204:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,204:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,211:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,225:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,237:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,237:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,248:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,260:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:11:54,389:INFO:Calculating mean and std
2024-07-28 18:11:54,390:INFO:Creating metrics dataframe
2024-07-28 18:11:54,392:INFO:Finalizing model
2024-07-28 18:11:56,844:INFO:Uploading results into container
2024-07-28 18:11:56,845:INFO:Uploading model into container now
2024-07-28 18:11:56,845:INFO:_master_model_container: 21
2024-07-28 18:11:56,845:INFO:_display_container: 19
2024-07-28 18:11:56,846:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=ExtraTreesClassifier(bootstrap=False,
                                                      ccp_alpha=0.0,
                                                      class_weight=None,
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      random_state=1000,
                                                      verbose=0,
                                                      warm_start=False),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:11:56,847:INFO:create_model() successfully completed......................................
2024-07-28 18:11:57,006:INFO:SubProcess create_model() end ==================================
2024-07-28 18:11:57,013:INFO:_master_model_container: 21
2024-07-28 18:11:57,013:INFO:_display_container: 19
2024-07-28 18:11:57,014:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=ExtraTreesClassifier(bootstrap=False,
                                                      ccp_alpha=0.0,
                                                      class_weight=None,
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      random_state=1000,
                                                      verbose=0,
                                                      warm_start=False),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:11:57,014:INFO:calibrate_model() successfully completed......................................
2024-07-28 18:11:57,151:INFO:Initializing predict_model()
2024-07-28 18:11:57,151:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=ExtraTreesClassifier(bootstrap=False,
                                                      ccp_alpha=0.0,
                                                      class_weight=None,
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      random_state=1000,
                                                      verbose=0,
                                                      warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875d6a8c0>)
2024-07-28 18:11:57,151:INFO:Checking exceptions
2024-07-28 18:11:57,151:INFO:Preloading libraries
2024-07-28 18:12:16,739:INFO:Initializing predict_model()
2024-07-28 18:12:16,740:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1000, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f75df2e0>)
2024-07-28 18:12:16,740:INFO:Checking exceptions
2024-07-28 18:12:16,740:INFO:Preloading libraries
2024-07-28 18:12:17,411:INFO:Initializing calibrate_model()
2024-07-28 18:12:17,411:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1000, splitter='best'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 18:12:17,411:INFO:Checking exceptions
2024-07-28 18:12:17,423:INFO:Preloading libraries
2024-07-28 18:12:17,423:INFO:Preparing display monitor
2024-07-28 18:12:17,424:INFO:Getting model name
2024-07-28 18:12:17,424:INFO:Base model : Decision Tree Classifier
2024-07-28 18:12:17,424:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 18:12:17,424:INFO:SubProcess create_model() called ==================================
2024-07-28 18:12:17,425:INFO:Initializing create_model()
2024-07-28 18:12:17,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=1000,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae864c8e260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 18:12:17,425:INFO:Checking exceptions
2024-07-28 18:12:17,425:INFO:Importing libraries
2024-07-28 18:12:17,425:INFO:Copying training dataset
2024-07-28 18:12:17,456:INFO:Defining folds
2024-07-28 18:12:17,456:INFO:Declaring metric variables
2024-07-28 18:12:17,456:INFO:Importing untrained model
2024-07-28 18:12:17,456:INFO:Declaring custom model
2024-07-28 18:12:17,457:INFO:Decision Tree Classifier Imported successfully
2024-07-28 18:12:17,457:INFO:Starting cross validation
2024-07-28 18:12:17,459:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 18:12:27,356:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,383:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,385:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,388:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,409:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,416:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,418:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,425:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,445:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,448:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,451:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,477:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,550:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,584:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,616:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:12:27,740:INFO:Calculating mean and std
2024-07-28 18:12:27,741:INFO:Creating metrics dataframe
2024-07-28 18:12:27,743:INFO:Finalizing model
2024-07-28 18:12:36,580:INFO:Uploading results into container
2024-07-28 18:12:36,582:INFO:Uploading model into container now
2024-07-28 18:12:36,582:INFO:_master_model_container: 22
2024-07-28 18:12:36,582:INFO:_display_container: 22
2024-07-28 18:12:36,583:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=1000,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:12:36,583:INFO:create_model() successfully completed......................................
2024-07-28 18:12:36,769:INFO:SubProcess create_model() end ==================================
2024-07-28 18:12:36,776:INFO:_master_model_container: 22
2024-07-28 18:12:36,776:INFO:_display_container: 22
2024-07-28 18:12:36,777:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=1000,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:12:36,777:INFO:calibrate_model() successfully completed......................................
2024-07-28 18:12:36,887:INFO:Initializing predict_model()
2024-07-28 18:12:36,887:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        random_state=1000,
                                                        splitter='best'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875d6a8c0>)
2024-07-28 18:12:36,887:INFO:Checking exceptions
2024-07-28 18:12:36,887:INFO:Preloading libraries
2024-07-28 18:13:34,074:INFO:Initializing predict_model()
2024-07-28 18:13:34,074:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f6d0bbe0>)
2024-07-28 18:13:34,075:INFO:Checking exceptions
2024-07-28 18:13:34,075:INFO:Preloading libraries
2024-07-28 18:13:35,957:INFO:Initializing calibrate_model()
2024-07-28 18:13:35,957:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 18:13:35,957:INFO:Checking exceptions
2024-07-28 18:13:35,968:INFO:Preloading libraries
2024-07-28 18:13:35,968:INFO:Preparing display monitor
2024-07-28 18:13:35,969:INFO:Getting model name
2024-07-28 18:13:35,969:INFO:Base model : K Neighbors Classifier
2024-07-28 18:13:35,969:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 18:13:35,969:INFO:SubProcess create_model() called ==================================
2024-07-28 18:13:35,970:INFO:Initializing create_model()
2024-07-28 18:13:35,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae7f69426b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 18:13:35,970:INFO:Checking exceptions
2024-07-28 18:13:35,970:INFO:Importing libraries
2024-07-28 18:13:35,970:INFO:Copying training dataset
2024-07-28 18:13:35,998:INFO:Defining folds
2024-07-28 18:13:35,998:INFO:Declaring metric variables
2024-07-28 18:13:35,998:INFO:Importing untrained model
2024-07-28 18:13:35,998:INFO:Declaring custom model
2024-07-28 18:13:35,999:INFO:K Neighbors Classifier Imported successfully
2024-07-28 18:13:35,999:INFO:Starting cross validation
2024-07-28 18:13:36,000:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 18:13:48,230:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,264:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,296:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,307:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,334:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,340:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,368:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,373:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,400:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,405:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,406:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,437:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,439:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,469:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,472:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:13:48,596:INFO:Calculating mean and std
2024-07-28 18:13:48,596:INFO:Creating metrics dataframe
2024-07-28 18:13:48,598:INFO:Finalizing model
2024-07-28 18:13:49,750:INFO:Uploading results into container
2024-07-28 18:13:49,750:INFO:Uploading model into container now
2024-07-28 18:13:49,751:INFO:_master_model_container: 23
2024-07-28 18:13:49,751:INFO:_display_container: 25
2024-07-28 18:13:49,752:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:13:49,752:INFO:create_model() successfully completed......................................
2024-07-28 18:13:49,964:INFO:SubProcess create_model() end ==================================
2024-07-28 18:13:49,970:INFO:_master_model_container: 23
2024-07-28 18:13:49,970:INFO:_display_container: 25
2024-07-28 18:13:49,971:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:13:49,971:INFO:calibrate_model() successfully completed......................................
2024-07-28 18:13:50,131:INFO:Initializing predict_model()
2024-07-28 18:13:50,131:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875cf4f70>)
2024-07-28 18:13:50,131:INFO:Checking exceptions
2024-07-28 18:13:50,131:INFO:Preloading libraries
2024-07-28 18:14:10,956:INFO:Initializing predict_model()
2024-07-28 18:14:10,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1000, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f6c804c0>)
2024-07-28 18:14:10,957:INFO:Checking exceptions
2024-07-28 18:14:10,957:INFO:Preloading libraries
2024-07-28 18:14:11,703:INFO:Initializing calibrate_model()
2024-07-28 18:14:11,703:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1000, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 18:14:11,703:INFO:Checking exceptions
2024-07-28 18:14:11,714:INFO:Preloading libraries
2024-07-28 18:14:11,714:INFO:Preparing display monitor
2024-07-28 18:14:11,716:INFO:Getting model name
2024-07-28 18:14:11,716:INFO:Base model : Logistic Regression
2024-07-28 18:14:11,716:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 18:14:11,716:INFO:SubProcess create_model() called ==================================
2024-07-28 18:14:11,717:INFO:Initializing create_model()
2024-07-28 18:14:11,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=1000,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae7f69426e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 18:14:11,717:INFO:Checking exceptions
2024-07-28 18:14:11,717:INFO:Importing libraries
2024-07-28 18:14:11,717:INFO:Copying training dataset
2024-07-28 18:14:11,747:INFO:Defining folds
2024-07-28 18:14:11,747:INFO:Declaring metric variables
2024-07-28 18:14:11,747:INFO:Importing untrained model
2024-07-28 18:14:11,747:INFO:Declaring custom model
2024-07-28 18:14:11,748:INFO:Logistic Regression Imported successfully
2024-07-28 18:14:11,748:INFO:Starting cross validation
2024-07-28 18:14:11,750:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 18:14:20,759:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:20,794:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:20,827:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,285:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,322:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,329:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,355:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,362:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,364:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,394:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,396:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,427:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,739:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,770:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,803:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:21,925:INFO:Calculating mean and std
2024-07-28 18:14:21,925:INFO:Creating metrics dataframe
2024-07-28 18:14:21,927:INFO:Finalizing model
2024-07-28 18:14:30,629:INFO:Uploading results into container
2024-07-28 18:14:30,630:INFO:Uploading model into container now
2024-07-28 18:14:30,631:INFO:_master_model_container: 24
2024-07-28 18:14:30,631:INFO:_display_container: 28
2024-07-28 18:14:30,632:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=1000,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:14:30,632:INFO:create_model() successfully completed......................................
2024-07-28 18:14:30,846:INFO:SubProcess create_model() end ==================================
2024-07-28 18:14:30,851:INFO:_master_model_container: 24
2024-07-28 18:14:30,851:INFO:_display_container: 28
2024-07-28 18:14:30,852:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=1000,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:14:30,852:INFO:calibrate_model() successfully completed......................................
2024-07-28 18:14:30,962:INFO:Initializing predict_model()
2024-07-28 18:14:30,962:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=1000,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875d6beb0>)
2024-07-28 18:14:30,962:INFO:Checking exceptions
2024-07-28 18:14:30,962:INFO:Preloading libraries
2024-07-28 18:14:49,027:INFO:Initializing predict_model()
2024-07-28 18:14:49,028:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f6dac5e0>)
2024-07-28 18:14:49,028:INFO:Checking exceptions
2024-07-28 18:14:49,028:INFO:Preloading libraries
2024-07-28 18:14:49,751:INFO:Initializing calibrate_model()
2024-07-28 18:14:49,751:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 18:14:49,751:INFO:Checking exceptions
2024-07-28 18:14:49,762:INFO:Preloading libraries
2024-07-28 18:14:49,762:INFO:Preparing display monitor
2024-07-28 18:14:49,763:INFO:Getting model name
2024-07-28 18:14:49,763:INFO:Base model : Quadratic Discriminant Analysis
2024-07-28 18:14:49,763:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 18:14:49,763:INFO:SubProcess create_model() called ==================================
2024-07-28 18:14:49,764:INFO:Initializing create_model()
2024-07-28 18:14:49,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=QuadraticDiscriminantAnalysis(priors=None,
                                                               reg_param=0.0,
                                                               store_covariance=False,
                                                               tol=0.0001),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae7f69426e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 18:14:49,764:INFO:Checking exceptions
2024-07-28 18:14:49,764:INFO:Importing libraries
2024-07-28 18:14:49,764:INFO:Copying training dataset
2024-07-28 18:14:49,790:INFO:Defining folds
2024-07-28 18:14:49,790:INFO:Declaring metric variables
2024-07-28 18:14:49,790:INFO:Importing untrained model
2024-07-28 18:14:49,790:INFO:Declaring custom model
2024-07-28 18:14:49,791:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-28 18:14:49,791:INFO:Starting cross validation
2024-07-28 18:14:49,792:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 18:14:54,216:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,247:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,264:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:14:54,277:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,291:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,319:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,325:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,345:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:14:54,352:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,353:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,355:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,359:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,371:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:14:54,384:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,386:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,388:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,404:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:14:54,407:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:14:54,418:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,420:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:14:54,544:INFO:Calculating mean and std
2024-07-28 18:14:54,544:INFO:Creating metrics dataframe
2024-07-28 18:14:54,546:INFO:Finalizing model
2024-07-28 18:14:55,657:INFO:Uploading results into container
2024-07-28 18:14:55,658:INFO:Uploading model into container now
2024-07-28 18:14:55,658:INFO:_master_model_container: 25
2024-07-28 18:14:55,658:INFO:_display_container: 31
2024-07-28 18:14:55,659:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=QuadraticDiscriminantAnalysis(priors=None,
                                                               reg_param=0.0,
                                                               store_covariance=False,
                                                               tol=0.0001),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:14:55,659:INFO:create_model() successfully completed......................................
2024-07-28 18:14:55,783:INFO:SubProcess create_model() end ==================================
2024-07-28 18:14:55,791:INFO:_master_model_container: 25
2024-07-28 18:14:55,791:INFO:_display_container: 31
2024-07-28 18:14:55,792:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=QuadraticDiscriminantAnalysis(priors=None,
                                                               reg_param=0.0,
                                                               store_covariance=False,
                                                               tol=0.0001),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:14:55,792:INFO:calibrate_model() successfully completed......................................
2024-07-28 18:14:55,906:INFO:Initializing predict_model()
2024-07-28 18:14:55,906:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=QuadraticDiscriminantAnalysis(priors=None,
                                                               reg_param=0.0,
                                                               store_covariance=False,
                                                               tol=0.0001),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875e32e60>)
2024-07-28 18:14:55,906:INFO:Checking exceptions
2024-07-28 18:14:55,906:INFO:Preloading libraries
2024-07-28 18:15:03,133:INFO:Initializing predict_model()
2024-07-28 18:15:03,134:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f6d5db40>)
2024-07-28 18:15:03,134:INFO:Checking exceptions
2024-07-28 18:15:03,134:INFO:Preloading libraries
2024-07-28 18:15:03,827:INFO:Initializing calibrate_model()
2024-07-28 18:15:03,827:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 18:15:03,827:INFO:Checking exceptions
2024-07-28 18:15:03,838:INFO:Preloading libraries
2024-07-28 18:15:03,838:INFO:Preparing display monitor
2024-07-28 18:15:03,839:INFO:Getting model name
2024-07-28 18:15:03,839:INFO:Base model : Linear Discriminant Analysis
2024-07-28 18:15:03,839:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 18:15:03,839:INFO:SubProcess create_model() called ==================================
2024-07-28 18:15:03,840:INFO:Initializing create_model()
2024-07-28 18:15:03,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                            n_components=None,
                                                            priors=None,
                                                            shrinkage=None,
                                                            solver='svd',
                                                            store_covariance=False,
                                                            tol=0.0001),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae7f69426e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 18:15:03,840:INFO:Checking exceptions
2024-07-28 18:15:03,840:INFO:Importing libraries
2024-07-28 18:15:03,840:INFO:Copying training dataset
2024-07-28 18:15:03,866:INFO:Defining folds
2024-07-28 18:15:03,866:INFO:Declaring metric variables
2024-07-28 18:15:03,867:INFO:Importing untrained model
2024-07-28 18:15:03,867:INFO:Declaring custom model
2024-07-28 18:15:03,867:INFO:Linear Discriminant Analysis Imported successfully
2024-07-28 18:15:03,867:INFO:Starting cross validation
2024-07-28 18:15:03,868:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 18:15:05,162:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:05,169:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:05,176:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:05,197:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:05,203:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:05,210:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:05,231:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:05,237:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:05,243:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:07,532:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:07,562:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:07,563:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:07,594:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:07,594:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:07,625:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:07,748:INFO:Calculating mean and std
2024-07-28 18:15:07,749:INFO:Creating metrics dataframe
2024-07-28 18:15:07,750:INFO:Finalizing model
2024-07-28 18:15:08,923:INFO:Uploading results into container
2024-07-28 18:15:08,924:INFO:Uploading model into container now
2024-07-28 18:15:08,925:INFO:_master_model_container: 26
2024-07-28 18:15:08,925:INFO:_display_container: 34
2024-07-28 18:15:08,926:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                            n_components=None,
                                                            priors=None,
                                                            shrinkage=None,
                                                            solver='svd',
                                                            store_covariance=False,
                                                            tol=0.0001),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:15:08,926:INFO:create_model() successfully completed......................................
2024-07-28 18:15:09,105:INFO:SubProcess create_model() end ==================================
2024-07-28 18:15:09,111:INFO:_master_model_container: 26
2024-07-28 18:15:09,112:INFO:_display_container: 34
2024-07-28 18:15:09,112:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                            n_components=None,
                                                            priors=None,
                                                            shrinkage=None,
                                                            solver='svd',
                                                            store_covariance=False,
                                                            tol=0.0001),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:15:09,112:INFO:calibrate_model() successfully completed......................................
2024-07-28 18:15:09,281:INFO:Initializing predict_model()
2024-07-28 18:15:09,281:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                            n_components=None,
                                                            priors=None,
                                                            shrinkage=None,
                                                            solver='svd',
                                                            store_covariance=False,
                                                            tol=0.0001),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f6c0e200>)
2024-07-28 18:15:09,281:INFO:Checking exceptions
2024-07-28 18:15:09,281:INFO:Preloading libraries
2024-07-28 18:15:16,171:INFO:Initializing predict_model()
2024-07-28 18:15:16,171:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1000), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f6dd1c60>)
2024-07-28 18:15:16,171:INFO:Checking exceptions
2024-07-28 18:15:16,171:INFO:Preloading libraries
2024-07-28 18:15:16,932:INFO:Initializing calibrate_model()
2024-07-28 18:15:16,932:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1000), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 18:15:16,932:INFO:Checking exceptions
2024-07-28 18:15:16,942:INFO:Preloading libraries
2024-07-28 18:15:16,943:INFO:Preparing display monitor
2024-07-28 18:15:16,944:INFO:Getting model name
2024-07-28 18:15:16,944:INFO:Base model : Ada Boost Classifier
2024-07-28 18:15:16,944:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 18:15:16,944:INFO:SubProcess create_model() called ==================================
2024-07-28 18:15:16,945:INFO:Initializing create_model()
2024-07-28 18:15:16,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=AdaBoostClassifier(algorithm='SAMME.R',
                                                    estimator=None,
                                                    learning_rate=1.0,
                                                    n_estimators=50,
                                                    random_state=1000),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae864c77790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 18:15:16,945:INFO:Checking exceptions
2024-07-28 18:15:16,945:INFO:Importing libraries
2024-07-28 18:15:16,945:INFO:Copying training dataset
2024-07-28 18:15:16,971:INFO:Defining folds
2024-07-28 18:15:16,971:INFO:Declaring metric variables
2024-07-28 18:15:16,971:INFO:Importing untrained model
2024-07-28 18:15:16,971:INFO:Declaring custom model
2024-07-28 18:15:16,971:INFO:Ada Boost Classifier Imported successfully
2024-07-28 18:15:16,972:INFO:Starting cross validation
2024-07-28 18:15:16,973:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 18:15:17,588:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:17,629:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:17,663:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:17,716:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:17,738:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:23,335:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:23,371:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:23,440:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:23,451:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:23,475:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:29,087:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:29,094:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:29,167:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:29,200:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:29,424:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:34,791:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:34,859:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:34,939:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:34,973:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:35,351:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:40,549:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:40,707:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:40,733:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:40,836:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:41,381:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-28 18:15:46,731:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:46,764:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:46,783:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:15:46,797:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:46,878:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:46,911:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:46,918:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:46,930:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:15:46,943:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:46,949:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:46,967:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:15:46,980:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:47,002:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:47,033:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:47,051:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:15:47,063:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:47,535:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:47,565:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:47,583:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:15:47,595:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:15:47,720:INFO:Calculating mean and std
2024-07-28 18:15:47,720:INFO:Creating metrics dataframe
2024-07-28 18:15:47,722:INFO:Finalizing model
2024-07-28 18:16:22,050:INFO:Uploading results into container
2024-07-28 18:16:22,051:INFO:Uploading model into container now
2024-07-28 18:16:22,052:INFO:_master_model_container: 27
2024-07-28 18:16:22,052:INFO:_display_container: 37
2024-07-28 18:16:22,053:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=AdaBoostClassifier(algorithm='SAMME.R',
                                                    estimator=None,
                                                    learning_rate=1.0,
                                                    n_estimators=50,
                                                    random_state=1000),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:16:22,053:INFO:create_model() successfully completed......................................
2024-07-28 18:16:22,222:INFO:SubProcess create_model() end ==================================
2024-07-28 18:16:22,228:INFO:_master_model_container: 27
2024-07-28 18:16:22,228:INFO:_display_container: 37
2024-07-28 18:16:22,228:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=AdaBoostClassifier(algorithm='SAMME.R',
                                                    estimator=None,
                                                    learning_rate=1.0,
                                                    n_estimators=50,
                                                    random_state=1000),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:16:22,228:INFO:calibrate_model() successfully completed......................................
2024-07-28 18:16:22,338:INFO:Initializing predict_model()
2024-07-28 18:16:22,338:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=AdaBoostClassifier(algorithm='SAMME.R',
                                                    estimator=None,
                                                    learning_rate=1.0,
                                                    n_estimators=50,
                                                    random_state=1000),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875e339a0>)
2024-07-28 18:16:22,339:INFO:Checking exceptions
2024-07-28 18:16:22,339:INFO:Preloading libraries
2024-07-28 18:20:23,590:INFO:Initializing predict_model()
2024-07-28 18:20:23,590:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1000, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f6dd01f0>)
2024-07-28 18:20:23,590:INFO:Checking exceptions
2024-07-28 18:20:23,590:INFO:Preloading libraries
2024-07-28 18:20:24,306:INFO:Initializing calibrate_model()
2024-07-28 18:20:24,306:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1000, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 18:20:24,306:INFO:Checking exceptions
2024-07-28 18:20:24,317:INFO:Preloading libraries
2024-07-28 18:20:24,318:INFO:Preparing display monitor
2024-07-28 18:20:24,319:INFO:Getting model name
2024-07-28 18:20:24,319:INFO:Base model : SVM - Linear Kernel
2024-07-28 18:20:24,319:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 18:20:24,319:INFO:SubProcess create_model() called ==================================
2024-07-28 18:20:24,320:INFO:Initializing create_model()
2024-07-28 18:20:24,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=SGDClassifier(alpha=0.0001, average=False,
                                               class_weight=None,
                                               early_stopping=False,
                                               epsilon=0.1, eta0=0.001,
                                               fit_intercept=True,
                                               l1_ratio=0.15,
                                               learning_rate='optimal',
                                               loss='hinge', max_iter=1000,
                                               n_iter_no_change=5, n_jobs=-1,
                                               penalty='l2', power_t=0.5,
                                               random_state=1000, shuffle=True,
                                               tol=0.001,
                                               validation_fraction=0.1,
                                               verbose=0, warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae864c77790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 18:20:24,320:INFO:Checking exceptions
2024-07-28 18:20:24,320:INFO:Importing libraries
2024-07-28 18:20:24,320:INFO:Copying training dataset
2024-07-28 18:20:24,349:INFO:Defining folds
2024-07-28 18:20:24,349:INFO:Declaring metric variables
2024-07-28 18:20:24,349:INFO:Importing untrained model
2024-07-28 18:20:24,349:INFO:Declaring custom model
2024-07-28 18:20:24,350:INFO:SVM - Linear Kernel Imported successfully
2024-07-28 18:20:24,350:INFO:Starting cross validation
2024-07-28 18:20:24,351:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 18:20:27,557:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:27,596:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:27,638:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:28,953:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:28,986:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:29,011:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:29,015:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:29,019:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:29,044:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:29,048:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:29,076:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:29,080:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:29,171:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:29,202:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:29,233:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:29,356:INFO:Calculating mean and std
2024-07-28 18:20:29,356:INFO:Creating metrics dataframe
2024-07-28 18:20:29,359:INFO:Finalizing model
2024-07-28 18:20:32,247:INFO:Uploading results into container
2024-07-28 18:20:32,248:INFO:Uploading model into container now
2024-07-28 18:20:32,248:INFO:_master_model_container: 28
2024-07-28 18:20:32,248:INFO:_display_container: 40
2024-07-28 18:20:32,250:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=SGDClassifier(alpha=0.0001, average=False,
                                               class_weight=None,
                                               early_stopping=False,
                                               epsilon=0.1, eta0=0.001,
                                               fit_intercept=True,
                                               l1_ratio=0.15,
                                               learning_rate='optimal',
                                               loss='hinge', max_iter=1000,
                                               n_iter_no_change=5, n_jobs=-1,
                                               penalty='l2', power_t=0.5,
                                               random_state=1000, shuffle=True,
                                               tol=0.001,
                                               validation_fraction=0.1,
                                               verbose=0, warm_start=False),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:20:32,250:INFO:create_model() successfully completed......................................
2024-07-28 18:20:32,456:INFO:SubProcess create_model() end ==================================
2024-07-28 18:20:32,462:INFO:_master_model_container: 28
2024-07-28 18:20:32,462:INFO:_display_container: 40
2024-07-28 18:20:32,463:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=SGDClassifier(alpha=0.0001, average=False,
                                               class_weight=None,
                                               early_stopping=False,
                                               epsilon=0.1, eta0=0.001,
                                               fit_intercept=True,
                                               l1_ratio=0.15,
                                               learning_rate='optimal',
                                               loss='hinge', max_iter=1000,
                                               n_iter_no_change=5, n_jobs=-1,
                                               penalty='l2', power_t=0.5,
                                               random_state=1000, shuffle=True,
                                               tol=0.001,
                                               validation_fraction=0.1,
                                               verbose=0, warm_start=False),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:20:32,463:INFO:calibrate_model() successfully completed......................................
2024-07-28 18:20:32,621:INFO:Initializing predict_model()
2024-07-28 18:20:32,621:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=SGDClassifier(alpha=0.0001, average=False,
                                               class_weight=None,
                                               early_stopping=False,
                                               epsilon=0.1, eta0=0.001,
                                               fit_intercept=True,
                                               l1_ratio=0.15,
                                               learning_rate='optimal',
                                               loss='hinge', max_iter=1000,
                                               n_iter_no_change=5, n_jobs=-1,
                                               penalty='l2', power_t=0.5,
                                               random_state=1000, shuffle=True,
                                               tol=0.001,
                                               validation_fraction=0.1,
                                               verbose=0, warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f6c913f0>)
2024-07-28 18:20:32,621:INFO:Checking exceptions
2024-07-28 18:20:32,621:INFO:Preloading libraries
2024-07-28 18:20:45,300:INFO:Initializing predict_model()
2024-07-28 18:20:45,301:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1000, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f7470a60>)
2024-07-28 18:20:45,301:INFO:Checking exceptions
2024-07-28 18:20:45,301:INFO:Preloading libraries
2024-07-28 18:20:46,062:INFO:Initializing calibrate_model()
2024-07-28 18:20:46,062:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1000, solver='auto',
                tol=0.0001), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 18:20:46,062:INFO:Checking exceptions
2024-07-28 18:20:46,073:INFO:Preloading libraries
2024-07-28 18:20:46,074:INFO:Preparing display monitor
2024-07-28 18:20:46,075:INFO:Getting model name
2024-07-28 18:20:46,075:INFO:Base model : Ridge Classifier
2024-07-28 18:20:46,075:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 18:20:46,075:INFO:SubProcess create_model() called ==================================
2024-07-28 18:20:46,076:INFO:Initializing create_model()
2024-07-28 18:20:46,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                                 copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, positive=False,
                                                 random_state=1000,
                                                 solver='auto', tol=0.0001),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae7f6aba080>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 18:20:46,076:INFO:Checking exceptions
2024-07-28 18:20:46,076:INFO:Importing libraries
2024-07-28 18:20:46,076:INFO:Copying training dataset
2024-07-28 18:20:46,103:INFO:Defining folds
2024-07-28 18:20:46,103:INFO:Declaring metric variables
2024-07-28 18:20:46,103:INFO:Importing untrained model
2024-07-28 18:20:46,103:INFO:Declaring custom model
2024-07-28 18:20:46,104:INFO:Ridge Classifier Imported successfully
2024-07-28 18:20:46,104:INFO:Starting cross validation
2024-07-28 18:20:46,105:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 18:20:50,330:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,344:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,354:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,365:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,369:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,377:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,386:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,388:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,398:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,403:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,408:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,418:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,421:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,436:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,453:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:20:50,584:INFO:Calculating mean and std
2024-07-28 18:20:50,585:INFO:Creating metrics dataframe
2024-07-28 18:20:50,587:INFO:Finalizing model
2024-07-28 18:20:51,505:INFO:Uploading results into container
2024-07-28 18:20:51,506:INFO:Uploading model into container now
2024-07-28 18:20:51,506:INFO:_master_model_container: 29
2024-07-28 18:20:51,506:INFO:_display_container: 43
2024-07-28 18:20:51,507:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                                 copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, positive=False,
                                                 random_state=1000,
                                                 solver='auto', tol=0.0001),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:20:51,507:INFO:create_model() successfully completed......................................
2024-07-28 18:20:51,658:INFO:SubProcess create_model() end ==================================
2024-07-28 18:20:51,666:INFO:_master_model_container: 29
2024-07-28 18:20:51,666:INFO:_display_container: 43
2024-07-28 18:20:51,667:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                                 copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, positive=False,
                                                 random_state=1000,
                                                 solver='auto', tol=0.0001),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:20:51,667:INFO:calibrate_model() successfully completed......................................
2024-07-28 18:20:51,794:INFO:Initializing predict_model()
2024-07-28 18:20:51,794:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                                 copy_X=True,
                                                 fit_intercept=True,
                                                 max_iter=None, positive=False,
                                                 random_state=1000,
                                                 solver='auto', tol=0.0001),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875c58820>)
2024-07-28 18:20:51,794:INFO:Checking exceptions
2024-07-28 18:20:51,794:INFO:Preloading libraries
2024-07-28 18:20:57,283:INFO:Initializing predict_model()
2024-07-28 18:20:57,283:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae7f74a0b80>)
2024-07-28 18:20:57,283:INFO:Checking exceptions
2024-07-28 18:20:57,283:INFO:Preloading libraries
2024-07-28 18:20:57,974:INFO:Initializing calibrate_model()
2024-07-28 18:20:57,974:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-28 18:20:57,974:INFO:Checking exceptions
2024-07-28 18:20:57,986:INFO:Preloading libraries
2024-07-28 18:20:57,986:INFO:Preparing display monitor
2024-07-28 18:20:57,987:INFO:Getting model name
2024-07-28 18:20:57,987:INFO:Base model : Naive Bayes
2024-07-28 18:20:57,988:INFO:Importing untrained CalibratedClassifierCV
2024-07-28 18:20:57,988:INFO:SubProcess create_model() called ==================================
2024-07-28 18:20:57,988:INFO:Initializing create_model()
2024-07-28 18:20:57,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=GaussianNB(priors=None, var_smoothing=1e-09),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ae7f68cb040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-28 18:20:57,988:INFO:Checking exceptions
2024-07-28 18:20:57,988:INFO:Importing libraries
2024-07-28 18:20:57,988:INFO:Copying training dataset
2024-07-28 18:20:58,017:INFO:Defining folds
2024-07-28 18:20:58,017:INFO:Declaring metric variables
2024-07-28 18:20:58,017:INFO:Importing untrained model
2024-07-28 18:20:58,017:INFO:Declaring custom model
2024-07-28 18:20:58,018:INFO:Naive Bayes Imported successfully
2024-07-28 18:20:58,018:INFO:Starting cross validation
2024-07-28 18:20:58,019:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-28 18:21:01,401:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,434:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,452:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:21:01,466:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,565:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,570:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,587:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,598:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,603:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,617:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:21:01,618:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,622:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:21:01,630:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,636:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,637:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:21:01,644:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,650:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,676:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,695:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-28 18:21:01,708:WARNING:/speed-scratch/m_daragh/venv/py31013_pc332/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Turnigy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-28 18:21:01,833:INFO:Calculating mean and std
2024-07-28 18:21:01,833:INFO:Creating metrics dataframe
2024-07-28 18:21:01,835:INFO:Finalizing model
2024-07-28 18:21:02,686:INFO:Uploading results into container
2024-07-28 18:21:02,687:INFO:Uploading model into container now
2024-07-28 18:21:02,688:INFO:_master_model_container: 30
2024-07-28 18:21:02,688:INFO:_display_container: 46
2024-07-28 18:21:02,689:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=GaussianNB(priors=None, var_smoothing=1e-09),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:21:02,689:INFO:create_model() successfully completed......................................
2024-07-28 18:21:02,911:INFO:SubProcess create_model() end ==================================
2024-07-28 18:21:02,918:INFO:_master_model_container: 30
2024-07-28 18:21:02,918:INFO:_display_container: 46
2024-07-28 18:21:02,918:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=GaussianNB(priors=None, var_smoothing=1e-09),
                       method='sigmoid', n_jobs=None)
2024-07-28 18:21:02,918:INFO:calibrate_model() successfully completed......................................
2024-07-28 18:21:03,046:INFO:Initializing predict_model()
2024-07-28 18:21:03,046:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2ae7f0883dc0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=GaussianNB(priors=None, var_smoothing=1e-09),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ae875d6beb0>)
2024-07-28 18:21:03,046:INFO:Checking exceptions
2024-07-28 18:21:03,046:INFO:Preloading libraries
